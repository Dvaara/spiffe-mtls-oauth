// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/common/common.proto
package spire.common;

public final class Common {
  private Common() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface EmptyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spire.common.Empty)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   ** Represents an empty message 
   * </pre>
   *
   * Protobuf type {@code spire.common.Empty}
   */
  public  static final class Empty extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spire.common.Empty)
      EmptyOrBuilder {
    // Use Empty.newBuilder() to construct.
    private Empty(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Empty() {
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Empty(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return spire.common.Common.internal_static_spire_common_Empty_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return spire.common.Common.internal_static_spire_common_Empty_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              spire.common.Common.Empty.class, spire.common.Common.Empty.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof spire.common.Common.Empty)) {
        return super.equals(obj);
      }
      spire.common.Common.Empty other = (spire.common.Common.Empty) obj;

      boolean result = true;
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static spire.common.Common.Empty parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static spire.common.Common.Empty parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static spire.common.Common.Empty parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static spire.common.Common.Empty parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static spire.common.Common.Empty parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static spire.common.Common.Empty parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static spire.common.Common.Empty parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static spire.common.Common.Empty parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static spire.common.Common.Empty parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static spire.common.Common.Empty parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(spire.common.Common.Empty prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Represents an empty message 
     * </pre>
     *
     * Protobuf type {@code spire.common.Empty}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spire.common.Empty)
        spire.common.Common.EmptyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return spire.common.Common.internal_static_spire_common_Empty_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return spire.common.Common.internal_static_spire_common_Empty_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                spire.common.Common.Empty.class, spire.common.Common.Empty.Builder.class);
      }

      // Construct using spire.common.Common.Empty.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return spire.common.Common.internal_static_spire_common_Empty_descriptor;
      }

      public spire.common.Common.Empty getDefaultInstanceForType() {
        return spire.common.Common.Empty.getDefaultInstance();
      }

      public spire.common.Common.Empty build() {
        spire.common.Common.Empty result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public spire.common.Common.Empty buildPartial() {
        spire.common.Common.Empty result = new spire.common.Common.Empty(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof spire.common.Common.Empty) {
          return mergeFrom((spire.common.Common.Empty)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(spire.common.Common.Empty other) {
        if (other == spire.common.Common.Empty.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        spire.common.Common.Empty parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (spire.common.Common.Empty) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:spire.common.Empty)
    }

    // @@protoc_insertion_point(class_scope:spire.common.Empty)
    private static final spire.common.Common.Empty DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new spire.common.Common.Empty();
    }

    public static spire.common.Common.Empty getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Empty>
        PARSER = new com.google.protobuf.AbstractParser<Empty>() {
      public Empty parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Empty(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Empty> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Empty> getParserForType() {
      return PARSER;
    }

    public spire.common.Common.Empty getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AttestationDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spire.common.AttestationData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** Type of attestation to perform. 
     * </pre>
     *
     * <code>string type = 1;</code>
     */
    String getType();
    /**
     * <pre>
     ** Type of attestation to perform. 
     * </pre>
     *
     * <code>string type = 1;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     ** The attestation data. 
     * </pre>
     *
     * <code>bytes data = 2;</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * <pre>
   ** A type which contains attestation data for specific platform. 
   * </pre>
   *
   * Protobuf type {@code spire.common.AttestationData}
   */
  public  static final class AttestationData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spire.common.AttestationData)
      AttestationDataOrBuilder {
    // Use AttestationData.newBuilder() to construct.
    private AttestationData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AttestationData() {
      type_ = "";
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private AttestationData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {

              data_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return spire.common.Common.internal_static_spire_common_AttestationData_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return spire.common.Common.internal_static_spire_common_AttestationData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              spire.common.Common.AttestationData.class, spire.common.Common.AttestationData.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile Object type_;
    /**
     * <pre>
     ** Type of attestation to perform. 
     * </pre>
     *
     * <code>string type = 1;</code>
     */
    public String getType() {
      Object ref = type_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** Type of attestation to perform. 
     * </pre>
     *
     * <code>string type = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      Object ref = type_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString data_;
    /**
     * <pre>
     ** The attestation data. 
     * </pre>
     *
     * <code>bytes data = 2;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (!data_.isEmpty()) {
        output.writeBytes(2, data_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, data_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof spire.common.Common.AttestationData)) {
        return super.equals(obj);
      }
      spire.common.Common.AttestationData other = (spire.common.Common.AttestationData) obj;

      boolean result = true;
      result = result && getType()
          .equals(other.getType());
      result = result && getData()
          .equals(other.getData());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static spire.common.Common.AttestationData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static spire.common.Common.AttestationData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static spire.common.Common.AttestationData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static spire.common.Common.AttestationData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static spire.common.Common.AttestationData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static spire.common.Common.AttestationData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static spire.common.Common.AttestationData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static spire.common.Common.AttestationData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static spire.common.Common.AttestationData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static spire.common.Common.AttestationData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(spire.common.Common.AttestationData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** A type which contains attestation data for specific platform. 
     * </pre>
     *
     * Protobuf type {@code spire.common.AttestationData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spire.common.AttestationData)
        spire.common.Common.AttestationDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return spire.common.Common.internal_static_spire_common_AttestationData_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return spire.common.Common.internal_static_spire_common_AttestationData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                spire.common.Common.AttestationData.class, spire.common.Common.AttestationData.Builder.class);
      }

      // Construct using spire.common.Common.AttestationData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        type_ = "";

        data_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return spire.common.Common.internal_static_spire_common_AttestationData_descriptor;
      }

      public spire.common.Common.AttestationData getDefaultInstanceForType() {
        return spire.common.Common.AttestationData.getDefaultInstance();
      }

      public spire.common.Common.AttestationData build() {
        spire.common.Common.AttestationData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public spire.common.Common.AttestationData buildPartial() {
        spire.common.Common.AttestationData result = new spire.common.Common.AttestationData(this);
        result.type_ = type_;
        result.data_ = data_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof spire.common.Common.AttestationData) {
          return mergeFrom((spire.common.Common.AttestationData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(spire.common.Common.AttestationData other) {
        if (other == spire.common.Common.AttestationData.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        spire.common.Common.AttestationData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (spire.common.Common.AttestationData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object type_ = "";
      /**
       * <pre>
       ** Type of attestation to perform. 
       * </pre>
       *
       * <code>string type = 1;</code>
       */
      public String getType() {
        Object ref = type_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** Type of attestation to perform. 
       * </pre>
       *
       * <code>string type = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** Type of attestation to perform. 
       * </pre>
       *
       * <code>string type = 1;</code>
       */
      public Builder setType(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** Type of attestation to perform. 
       * </pre>
       *
       * <code>string type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** Type of attestation to perform. 
       * </pre>
       *
       * <code>string type = 1;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       ** The attestation data. 
       * </pre>
       *
       * <code>bytes data = 2;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <pre>
       ** The attestation data. 
       * </pre>
       *
       * <code>bytes data = 2;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** The attestation data. 
       * </pre>
       *
       * <code>bytes data = 2;</code>
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:spire.common.AttestationData)
    }

    // @@protoc_insertion_point(class_scope:spire.common.AttestationData)
    private static final spire.common.Common.AttestationData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new spire.common.Common.AttestationData();
    }

    public static spire.common.Common.AttestationData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AttestationData>
        PARSER = new com.google.protobuf.AbstractParser<AttestationData>() {
      public AttestationData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new AttestationData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AttestationData> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<AttestationData> getParserForType() {
      return PARSER;
    }

    public spire.common.Common.AttestationData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SelectorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spire.common.Selector)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** A selector type represents the type of attestation used in attesting
     *the entity (Eg: AWS, K8). 
     * </pre>
     *
     * <code>string type = 1;</code>
     */
    String getType();
    /**
     * <pre>
     ** A selector type represents the type of attestation used in attesting
     *the entity (Eg: AWS, K8). 
     * </pre>
     *
     * <code>string type = 1;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     ** The value to be attested. 
     * </pre>
     *
     * <code>string value = 2;</code>
     */
    String getValue();
    /**
     * <pre>
     ** The value to be attested. 
     * </pre>
     *
     * <code>string value = 2;</code>
     */
    com.google.protobuf.ByteString
        getValueBytes();
  }
  /**
   * <pre>
   ** A type which describes the conditions under which a registration
   *entry is matched. 
   * </pre>
   *
   * Protobuf type {@code spire.common.Selector}
   */
  public  static final class Selector extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spire.common.Selector)
      SelectorOrBuilder {
    // Use Selector.newBuilder() to construct.
    private Selector(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Selector() {
      type_ = "";
      value_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Selector(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              value_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return spire.common.Common.internal_static_spire_common_Selector_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return spire.common.Common.internal_static_spire_common_Selector_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              spire.common.Common.Selector.class, spire.common.Common.Selector.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile Object type_;
    /**
     * <pre>
     ** A selector type represents the type of attestation used in attesting
     *the entity (Eg: AWS, K8). 
     * </pre>
     *
     * <code>string type = 1;</code>
     */
    public String getType() {
      Object ref = type_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** A selector type represents the type of attestation used in attesting
     *the entity (Eg: AWS, K8). 
     * </pre>
     *
     * <code>string type = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      Object ref = type_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private volatile Object value_;
    /**
     * <pre>
     ** The value to be attested. 
     * </pre>
     *
     * <code>string value = 2;</code>
     */
    public String getValue() {
      Object ref = value_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        value_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** The value to be attested. 
     * </pre>
     *
     * <code>string value = 2;</code>
     */
    public com.google.protobuf.ByteString
        getValueBytes() {
      Object ref = value_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (!getValueBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, value_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (!getValueBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, value_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof spire.common.Common.Selector)) {
        return super.equals(obj);
      }
      spire.common.Common.Selector other = (spire.common.Common.Selector) obj;

      boolean result = true;
      result = result && getType()
          .equals(other.getType());
      result = result && getValue()
          .equals(other.getValue());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static spire.common.Common.Selector parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static spire.common.Common.Selector parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static spire.common.Common.Selector parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static spire.common.Common.Selector parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static spire.common.Common.Selector parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static spire.common.Common.Selector parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static spire.common.Common.Selector parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static spire.common.Common.Selector parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static spire.common.Common.Selector parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static spire.common.Common.Selector parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(spire.common.Common.Selector prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** A type which describes the conditions under which a registration
     *entry is matched. 
     * </pre>
     *
     * Protobuf type {@code spire.common.Selector}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spire.common.Selector)
        spire.common.Common.SelectorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return spire.common.Common.internal_static_spire_common_Selector_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return spire.common.Common.internal_static_spire_common_Selector_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                spire.common.Common.Selector.class, spire.common.Common.Selector.Builder.class);
      }

      // Construct using spire.common.Common.Selector.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        type_ = "";

        value_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return spire.common.Common.internal_static_spire_common_Selector_descriptor;
      }

      public spire.common.Common.Selector getDefaultInstanceForType() {
        return spire.common.Common.Selector.getDefaultInstance();
      }

      public spire.common.Common.Selector build() {
        spire.common.Common.Selector result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public spire.common.Common.Selector buildPartial() {
        spire.common.Common.Selector result = new spire.common.Common.Selector(this);
        result.type_ = type_;
        result.value_ = value_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof spire.common.Common.Selector) {
          return mergeFrom((spire.common.Common.Selector)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(spire.common.Common.Selector other) {
        if (other == spire.common.Common.Selector.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getValue().isEmpty()) {
          value_ = other.value_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        spire.common.Common.Selector parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (spire.common.Common.Selector) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object type_ = "";
      /**
       * <pre>
       ** A selector type represents the type of attestation used in attesting
       *the entity (Eg: AWS, K8). 
       * </pre>
       *
       * <code>string type = 1;</code>
       */
      public String getType() {
        Object ref = type_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** A selector type represents the type of attestation used in attesting
       *the entity (Eg: AWS, K8). 
       * </pre>
       *
       * <code>string type = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** A selector type represents the type of attestation used in attesting
       *the entity (Eg: AWS, K8). 
       * </pre>
       *
       * <code>string type = 1;</code>
       */
      public Builder setType(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** A selector type represents the type of attestation used in attesting
       *the entity (Eg: AWS, K8). 
       * </pre>
       *
       * <code>string type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** A selector type represents the type of attestation used in attesting
       *the entity (Eg: AWS, K8). 
       * </pre>
       *
       * <code>string type = 1;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private Object value_ = "";
      /**
       * <pre>
       ** The value to be attested. 
       * </pre>
       *
       * <code>string value = 2;</code>
       */
      public String getValue() {
        Object ref = value_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          value_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** The value to be attested. 
       * </pre>
       *
       * <code>string value = 2;</code>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** The value to be attested. 
       * </pre>
       *
       * <code>string value = 2;</code>
       */
      public Builder setValue(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** The value to be attested. 
       * </pre>
       *
       * <code>string value = 2;</code>
       */
      public Builder clearValue() {
        
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** The value to be attested. 
       * </pre>
       *
       * <code>string value = 2;</code>
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        value_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:spire.common.Selector)
    }

    // @@protoc_insertion_point(class_scope:spire.common.Selector)
    private static final spire.common.Common.Selector DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new spire.common.Common.Selector();
    }

    public static spire.common.Common.Selector getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Selector>
        PARSER = new com.google.protobuf.AbstractParser<Selector>() {
      public Selector parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Selector(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Selector> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Selector> getParserForType() {
      return PARSER;
    }

    public spire.common.Common.Selector getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SelectorsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spire.common.Selectors)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** A list of Selector. 
     * </pre>
     *
     * <code>repeated .spire.common.Selector entries = 1;</code>
     */
    java.util.List<spire.common.Common.Selector> 
        getEntriesList();
    /**
     * <pre>
     ** A list of Selector. 
     * </pre>
     *
     * <code>repeated .spire.common.Selector entries = 1;</code>
     */
    spire.common.Common.Selector getEntries(int index);
    /**
     * <pre>
     ** A list of Selector. 
     * </pre>
     *
     * <code>repeated .spire.common.Selector entries = 1;</code>
     */
    int getEntriesCount();
    /**
     * <pre>
     ** A list of Selector. 
     * </pre>
     *
     * <code>repeated .spire.common.Selector entries = 1;</code>
     */
    java.util.List<? extends spire.common.Common.SelectorOrBuilder> 
        getEntriesOrBuilderList();
    /**
     * <pre>
     ** A list of Selector. 
     * </pre>
     *
     * <code>repeated .spire.common.Selector entries = 1;</code>
     */
    spire.common.Common.SelectorOrBuilder getEntriesOrBuilder(
            int index);
  }
  /**
   * <pre>
   ** Represents a type with a list of Selector. 
   * </pre>
   *
   * Protobuf type {@code spire.common.Selectors}
   */
  public  static final class Selectors extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spire.common.Selectors)
      SelectorsOrBuilder {
    // Use Selectors.newBuilder() to construct.
    private Selectors(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Selectors() {
      entries_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Selectors(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                entries_ = new java.util.ArrayList<spire.common.Common.Selector>();
                mutable_bitField0_ |= 0x00000001;
              }
              entries_.add(
                  input.readMessage(spire.common.Common.Selector.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          entries_ = java.util.Collections.unmodifiableList(entries_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return spire.common.Common.internal_static_spire_common_Selectors_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return spire.common.Common.internal_static_spire_common_Selectors_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              spire.common.Common.Selectors.class, spire.common.Common.Selectors.Builder.class);
    }

    public static final int ENTRIES_FIELD_NUMBER = 1;
    private java.util.List<spire.common.Common.Selector> entries_;
    /**
     * <pre>
     ** A list of Selector. 
     * </pre>
     *
     * <code>repeated .spire.common.Selector entries = 1;</code>
     */
    public java.util.List<spire.common.Common.Selector> getEntriesList() {
      return entries_;
    }
    /**
     * <pre>
     ** A list of Selector. 
     * </pre>
     *
     * <code>repeated .spire.common.Selector entries = 1;</code>
     */
    public java.util.List<? extends spire.common.Common.SelectorOrBuilder> 
        getEntriesOrBuilderList() {
      return entries_;
    }
    /**
     * <pre>
     ** A list of Selector. 
     * </pre>
     *
     * <code>repeated .spire.common.Selector entries = 1;</code>
     */
    public int getEntriesCount() {
      return entries_.size();
    }
    /**
     * <pre>
     ** A list of Selector. 
     * </pre>
     *
     * <code>repeated .spire.common.Selector entries = 1;</code>
     */
    public spire.common.Common.Selector getEntries(int index) {
      return entries_.get(index);
    }
    /**
     * <pre>
     ** A list of Selector. 
     * </pre>
     *
     * <code>repeated .spire.common.Selector entries = 1;</code>
     */
    public spire.common.Common.SelectorOrBuilder getEntriesOrBuilder(
        int index) {
      return entries_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < entries_.size(); i++) {
        output.writeMessage(1, entries_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < entries_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, entries_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof spire.common.Common.Selectors)) {
        return super.equals(obj);
      }
      spire.common.Common.Selectors other = (spire.common.Common.Selectors) obj;

      boolean result = true;
      result = result && getEntriesList()
          .equals(other.getEntriesList());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getEntriesCount() > 0) {
        hash = (37 * hash) + ENTRIES_FIELD_NUMBER;
        hash = (53 * hash) + getEntriesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static spire.common.Common.Selectors parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static spire.common.Common.Selectors parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static spire.common.Common.Selectors parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static spire.common.Common.Selectors parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static spire.common.Common.Selectors parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static spire.common.Common.Selectors parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static spire.common.Common.Selectors parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static spire.common.Common.Selectors parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static spire.common.Common.Selectors parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static spire.common.Common.Selectors parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(spire.common.Common.Selectors prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Represents a type with a list of Selector. 
     * </pre>
     *
     * Protobuf type {@code spire.common.Selectors}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spire.common.Selectors)
        spire.common.Common.SelectorsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return spire.common.Common.internal_static_spire_common_Selectors_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return spire.common.Common.internal_static_spire_common_Selectors_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                spire.common.Common.Selectors.class, spire.common.Common.Selectors.Builder.class);
      }

      // Construct using spire.common.Common.Selectors.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getEntriesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (entriesBuilder_ == null) {
          entries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          entriesBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return spire.common.Common.internal_static_spire_common_Selectors_descriptor;
      }

      public spire.common.Common.Selectors getDefaultInstanceForType() {
        return spire.common.Common.Selectors.getDefaultInstance();
      }

      public spire.common.Common.Selectors build() {
        spire.common.Common.Selectors result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public spire.common.Common.Selectors buildPartial() {
        spire.common.Common.Selectors result = new spire.common.Common.Selectors(this);
        int from_bitField0_ = bitField0_;
        if (entriesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            entries_ = java.util.Collections.unmodifiableList(entries_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.entries_ = entries_;
        } else {
          result.entries_ = entriesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof spire.common.Common.Selectors) {
          return mergeFrom((spire.common.Common.Selectors)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(spire.common.Common.Selectors other) {
        if (other == spire.common.Common.Selectors.getDefaultInstance()) return this;
        if (entriesBuilder_ == null) {
          if (!other.entries_.isEmpty()) {
            if (entries_.isEmpty()) {
              entries_ = other.entries_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureEntriesIsMutable();
              entries_.addAll(other.entries_);
            }
            onChanged();
          }
        } else {
          if (!other.entries_.isEmpty()) {
            if (entriesBuilder_.isEmpty()) {
              entriesBuilder_.dispose();
              entriesBuilder_ = null;
              entries_ = other.entries_;
              bitField0_ = (bitField0_ & ~0x00000001);
              entriesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEntriesFieldBuilder() : null;
            } else {
              entriesBuilder_.addAllMessages(other.entries_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        spire.common.Common.Selectors parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (spire.common.Common.Selectors) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<spire.common.Common.Selector> entries_ =
        java.util.Collections.emptyList();
      private void ensureEntriesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          entries_ = new java.util.ArrayList<spire.common.Common.Selector>(entries_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          spire.common.Common.Selector, spire.common.Common.Selector.Builder, spire.common.Common.SelectorOrBuilder> entriesBuilder_;

      /**
       * <pre>
       ** A list of Selector. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector entries = 1;</code>
       */
      public java.util.List<spire.common.Common.Selector> getEntriesList() {
        if (entriesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(entries_);
        } else {
          return entriesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       ** A list of Selector. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector entries = 1;</code>
       */
      public int getEntriesCount() {
        if (entriesBuilder_ == null) {
          return entries_.size();
        } else {
          return entriesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       ** A list of Selector. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector entries = 1;</code>
       */
      public spire.common.Common.Selector getEntries(int index) {
        if (entriesBuilder_ == null) {
          return entries_.get(index);
        } else {
          return entriesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       ** A list of Selector. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector entries = 1;</code>
       */
      public Builder setEntries(
          int index, spire.common.Common.Selector value) {
        if (entriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntriesIsMutable();
          entries_.set(index, value);
          onChanged();
        } else {
          entriesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** A list of Selector. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector entries = 1;</code>
       */
      public Builder setEntries(
          int index, spire.common.Common.Selector.Builder builderForValue) {
        if (entriesBuilder_ == null) {
          ensureEntriesIsMutable();
          entries_.set(index, builderForValue.build());
          onChanged();
        } else {
          entriesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** A list of Selector. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector entries = 1;</code>
       */
      public Builder addEntries(spire.common.Common.Selector value) {
        if (entriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntriesIsMutable();
          entries_.add(value);
          onChanged();
        } else {
          entriesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       ** A list of Selector. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector entries = 1;</code>
       */
      public Builder addEntries(
          int index, spire.common.Common.Selector value) {
        if (entriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntriesIsMutable();
          entries_.add(index, value);
          onChanged();
        } else {
          entriesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** A list of Selector. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector entries = 1;</code>
       */
      public Builder addEntries(
          spire.common.Common.Selector.Builder builderForValue) {
        if (entriesBuilder_ == null) {
          ensureEntriesIsMutable();
          entries_.add(builderForValue.build());
          onChanged();
        } else {
          entriesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** A list of Selector. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector entries = 1;</code>
       */
      public Builder addEntries(
          int index, spire.common.Common.Selector.Builder builderForValue) {
        if (entriesBuilder_ == null) {
          ensureEntriesIsMutable();
          entries_.add(index, builderForValue.build());
          onChanged();
        } else {
          entriesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** A list of Selector. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector entries = 1;</code>
       */
      public Builder addAllEntries(
          Iterable<? extends spire.common.Common.Selector> values) {
        if (entriesBuilder_ == null) {
          ensureEntriesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, entries_);
          onChanged();
        } else {
          entriesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       ** A list of Selector. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector entries = 1;</code>
       */
      public Builder clearEntries() {
        if (entriesBuilder_ == null) {
          entries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          entriesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       ** A list of Selector. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector entries = 1;</code>
       */
      public Builder removeEntries(int index) {
        if (entriesBuilder_ == null) {
          ensureEntriesIsMutable();
          entries_.remove(index);
          onChanged();
        } else {
          entriesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       ** A list of Selector. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector entries = 1;</code>
       */
      public spire.common.Common.Selector.Builder getEntriesBuilder(
          int index) {
        return getEntriesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       ** A list of Selector. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector entries = 1;</code>
       */
      public spire.common.Common.SelectorOrBuilder getEntriesOrBuilder(
          int index) {
        if (entriesBuilder_ == null) {
          return entries_.get(index);  } else {
          return entriesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       ** A list of Selector. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector entries = 1;</code>
       */
      public java.util.List<? extends spire.common.Common.SelectorOrBuilder> 
           getEntriesOrBuilderList() {
        if (entriesBuilder_ != null) {
          return entriesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(entries_);
        }
      }
      /**
       * <pre>
       ** A list of Selector. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector entries = 1;</code>
       */
      public spire.common.Common.Selector.Builder addEntriesBuilder() {
        return getEntriesFieldBuilder().addBuilder(
            spire.common.Common.Selector.getDefaultInstance());
      }
      /**
       * <pre>
       ** A list of Selector. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector entries = 1;</code>
       */
      public spire.common.Common.Selector.Builder addEntriesBuilder(
          int index) {
        return getEntriesFieldBuilder().addBuilder(
            index, spire.common.Common.Selector.getDefaultInstance());
      }
      /**
       * <pre>
       ** A list of Selector. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector entries = 1;</code>
       */
      public java.util.List<spire.common.Common.Selector.Builder> 
           getEntriesBuilderList() {
        return getEntriesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          spire.common.Common.Selector, spire.common.Common.Selector.Builder, spire.common.Common.SelectorOrBuilder> 
          getEntriesFieldBuilder() {
        if (entriesBuilder_ == null) {
          entriesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              spire.common.Common.Selector, spire.common.Common.Selector.Builder, spire.common.Common.SelectorOrBuilder>(
                  entries_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          entries_ = null;
        }
        return entriesBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:spire.common.Selectors)
    }

    // @@protoc_insertion_point(class_scope:spire.common.Selectors)
    private static final spire.common.Common.Selectors DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new spire.common.Common.Selectors();
    }

    public static spire.common.Common.Selectors getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Selectors>
        PARSER = new com.google.protobuf.AbstractParser<Selectors>() {
      public Selectors parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Selectors(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Selectors> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Selectors> getParserForType() {
      return PARSER;
    }

    public spire.common.Common.Selectors getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AttestedNodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spire.common.AttestedNode)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Node SPIFFE ID
     * </pre>
     *
     * <code>string spiffe_id = 1;</code>
     */
    String getSpiffeId();
    /**
     * <pre>
     * Node SPIFFE ID
     * </pre>
     *
     * <code>string spiffe_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getSpiffeIdBytes();

    /**
     * <pre>
     * Attestation data type
     * </pre>
     *
     * <code>string attestation_data_type = 2;</code>
     */
    String getAttestationDataType();
    /**
     * <pre>
     * Attestation data type
     * </pre>
     *
     * <code>string attestation_data_type = 2;</code>
     */
    com.google.protobuf.ByteString
        getAttestationDataTypeBytes();

    /**
     * <pre>
     * Node certificate serial number
     * </pre>
     *
     * <code>string cert_serial_number = 3;</code>
     */
    String getCertSerialNumber();
    /**
     * <pre>
     * Node certificate serial number
     * </pre>
     *
     * <code>string cert_serial_number = 3;</code>
     */
    com.google.protobuf.ByteString
        getCertSerialNumberBytes();

    /**
     * <pre>
     * Node certificate not_after (seconds since unix epoch)
     * </pre>
     *
     * <code>int64 cert_not_after = 4;</code>
     */
    long getCertNotAfter();
  }
  /**
   * <pre>
   * Represents an attested SPIRE agent 
   * </pre>
   *
   * Protobuf type {@code spire.common.AttestedNode}
   */
  public  static final class AttestedNode extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spire.common.AttestedNode)
      AttestedNodeOrBuilder {
    // Use AttestedNode.newBuilder() to construct.
    private AttestedNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AttestedNode() {
      spiffeId_ = "";
      attestationDataType_ = "";
      certSerialNumber_ = "";
      certNotAfter_ = 0L;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private AttestedNode(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              spiffeId_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              attestationDataType_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              certSerialNumber_ = s;
              break;
            }
            case 32: {

              certNotAfter_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return spire.common.Common.internal_static_spire_common_AttestedNode_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return spire.common.Common.internal_static_spire_common_AttestedNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              spire.common.Common.AttestedNode.class, spire.common.Common.AttestedNode.Builder.class);
    }

    public static final int SPIFFE_ID_FIELD_NUMBER = 1;
    private volatile Object spiffeId_;
    /**
     * <pre>
     * Node SPIFFE ID
     * </pre>
     *
     * <code>string spiffe_id = 1;</code>
     */
    public String getSpiffeId() {
      Object ref = spiffeId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        spiffeId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Node SPIFFE ID
     * </pre>
     *
     * <code>string spiffe_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSpiffeIdBytes() {
      Object ref = spiffeId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        spiffeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ATTESTATION_DATA_TYPE_FIELD_NUMBER = 2;
    private volatile Object attestationDataType_;
    /**
     * <pre>
     * Attestation data type
     * </pre>
     *
     * <code>string attestation_data_type = 2;</code>
     */
    public String getAttestationDataType() {
      Object ref = attestationDataType_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        attestationDataType_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Attestation data type
     * </pre>
     *
     * <code>string attestation_data_type = 2;</code>
     */
    public com.google.protobuf.ByteString
        getAttestationDataTypeBytes() {
      Object ref = attestationDataType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        attestationDataType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CERT_SERIAL_NUMBER_FIELD_NUMBER = 3;
    private volatile Object certSerialNumber_;
    /**
     * <pre>
     * Node certificate serial number
     * </pre>
     *
     * <code>string cert_serial_number = 3;</code>
     */
    public String getCertSerialNumber() {
      Object ref = certSerialNumber_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        certSerialNumber_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Node certificate serial number
     * </pre>
     *
     * <code>string cert_serial_number = 3;</code>
     */
    public com.google.protobuf.ByteString
        getCertSerialNumberBytes() {
      Object ref = certSerialNumber_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        certSerialNumber_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CERT_NOT_AFTER_FIELD_NUMBER = 4;
    private long certNotAfter_;
    /**
     * <pre>
     * Node certificate not_after (seconds since unix epoch)
     * </pre>
     *
     * <code>int64 cert_not_after = 4;</code>
     */
    public long getCertNotAfter() {
      return certNotAfter_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getSpiffeIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, spiffeId_);
      }
      if (!getAttestationDataTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, attestationDataType_);
      }
      if (!getCertSerialNumberBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, certSerialNumber_);
      }
      if (certNotAfter_ != 0L) {
        output.writeInt64(4, certNotAfter_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getSpiffeIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, spiffeId_);
      }
      if (!getAttestationDataTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, attestationDataType_);
      }
      if (!getCertSerialNumberBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, certSerialNumber_);
      }
      if (certNotAfter_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, certNotAfter_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof spire.common.Common.AttestedNode)) {
        return super.equals(obj);
      }
      spire.common.Common.AttestedNode other = (spire.common.Common.AttestedNode) obj;

      boolean result = true;
      result = result && getSpiffeId()
          .equals(other.getSpiffeId());
      result = result && getAttestationDataType()
          .equals(other.getAttestationDataType());
      result = result && getCertSerialNumber()
          .equals(other.getCertSerialNumber());
      result = result && (getCertNotAfter()
          == other.getCertNotAfter());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SPIFFE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getSpiffeId().hashCode();
      hash = (37 * hash) + ATTESTATION_DATA_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getAttestationDataType().hashCode();
      hash = (37 * hash) + CERT_SERIAL_NUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getCertSerialNumber().hashCode();
      hash = (37 * hash) + CERT_NOT_AFTER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCertNotAfter());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static spire.common.Common.AttestedNode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static spire.common.Common.AttestedNode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static spire.common.Common.AttestedNode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static spire.common.Common.AttestedNode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static spire.common.Common.AttestedNode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static spire.common.Common.AttestedNode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static spire.common.Common.AttestedNode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static spire.common.Common.AttestedNode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static spire.common.Common.AttestedNode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static spire.common.Common.AttestedNode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(spire.common.Common.AttestedNode prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Represents an attested SPIRE agent 
     * </pre>
     *
     * Protobuf type {@code spire.common.AttestedNode}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spire.common.AttestedNode)
        spire.common.Common.AttestedNodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return spire.common.Common.internal_static_spire_common_AttestedNode_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return spire.common.Common.internal_static_spire_common_AttestedNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                spire.common.Common.AttestedNode.class, spire.common.Common.AttestedNode.Builder.class);
      }

      // Construct using spire.common.Common.AttestedNode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        spiffeId_ = "";

        attestationDataType_ = "";

        certSerialNumber_ = "";

        certNotAfter_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return spire.common.Common.internal_static_spire_common_AttestedNode_descriptor;
      }

      public spire.common.Common.AttestedNode getDefaultInstanceForType() {
        return spire.common.Common.AttestedNode.getDefaultInstance();
      }

      public spire.common.Common.AttestedNode build() {
        spire.common.Common.AttestedNode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public spire.common.Common.AttestedNode buildPartial() {
        spire.common.Common.AttestedNode result = new spire.common.Common.AttestedNode(this);
        result.spiffeId_ = spiffeId_;
        result.attestationDataType_ = attestationDataType_;
        result.certSerialNumber_ = certSerialNumber_;
        result.certNotAfter_ = certNotAfter_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof spire.common.Common.AttestedNode) {
          return mergeFrom((spire.common.Common.AttestedNode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(spire.common.Common.AttestedNode other) {
        if (other == spire.common.Common.AttestedNode.getDefaultInstance()) return this;
        if (!other.getSpiffeId().isEmpty()) {
          spiffeId_ = other.spiffeId_;
          onChanged();
        }
        if (!other.getAttestationDataType().isEmpty()) {
          attestationDataType_ = other.attestationDataType_;
          onChanged();
        }
        if (!other.getCertSerialNumber().isEmpty()) {
          certSerialNumber_ = other.certSerialNumber_;
          onChanged();
        }
        if (other.getCertNotAfter() != 0L) {
          setCertNotAfter(other.getCertNotAfter());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        spire.common.Common.AttestedNode parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (spire.common.Common.AttestedNode) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object spiffeId_ = "";
      /**
       * <pre>
       * Node SPIFFE ID
       * </pre>
       *
       * <code>string spiffe_id = 1;</code>
       */
      public String getSpiffeId() {
        Object ref = spiffeId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          spiffeId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * Node SPIFFE ID
       * </pre>
       *
       * <code>string spiffe_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSpiffeIdBytes() {
        Object ref = spiffeId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          spiffeId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Node SPIFFE ID
       * </pre>
       *
       * <code>string spiffe_id = 1;</code>
       */
      public Builder setSpiffeId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        spiffeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Node SPIFFE ID
       * </pre>
       *
       * <code>string spiffe_id = 1;</code>
       */
      public Builder clearSpiffeId() {
        
        spiffeId_ = getDefaultInstance().getSpiffeId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Node SPIFFE ID
       * </pre>
       *
       * <code>string spiffe_id = 1;</code>
       */
      public Builder setSpiffeIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        spiffeId_ = value;
        onChanged();
        return this;
      }

      private Object attestationDataType_ = "";
      /**
       * <pre>
       * Attestation data type
       * </pre>
       *
       * <code>string attestation_data_type = 2;</code>
       */
      public String getAttestationDataType() {
        Object ref = attestationDataType_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          attestationDataType_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * Attestation data type
       * </pre>
       *
       * <code>string attestation_data_type = 2;</code>
       */
      public com.google.protobuf.ByteString
          getAttestationDataTypeBytes() {
        Object ref = attestationDataType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          attestationDataType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Attestation data type
       * </pre>
       *
       * <code>string attestation_data_type = 2;</code>
       */
      public Builder setAttestationDataType(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        attestationDataType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Attestation data type
       * </pre>
       *
       * <code>string attestation_data_type = 2;</code>
       */
      public Builder clearAttestationDataType() {
        
        attestationDataType_ = getDefaultInstance().getAttestationDataType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Attestation data type
       * </pre>
       *
       * <code>string attestation_data_type = 2;</code>
       */
      public Builder setAttestationDataTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        attestationDataType_ = value;
        onChanged();
        return this;
      }

      private Object certSerialNumber_ = "";
      /**
       * <pre>
       * Node certificate serial number
       * </pre>
       *
       * <code>string cert_serial_number = 3;</code>
       */
      public String getCertSerialNumber() {
        Object ref = certSerialNumber_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          certSerialNumber_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * Node certificate serial number
       * </pre>
       *
       * <code>string cert_serial_number = 3;</code>
       */
      public com.google.protobuf.ByteString
          getCertSerialNumberBytes() {
        Object ref = certSerialNumber_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          certSerialNumber_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Node certificate serial number
       * </pre>
       *
       * <code>string cert_serial_number = 3;</code>
       */
      public Builder setCertSerialNumber(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        certSerialNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Node certificate serial number
       * </pre>
       *
       * <code>string cert_serial_number = 3;</code>
       */
      public Builder clearCertSerialNumber() {
        
        certSerialNumber_ = getDefaultInstance().getCertSerialNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Node certificate serial number
       * </pre>
       *
       * <code>string cert_serial_number = 3;</code>
       */
      public Builder setCertSerialNumberBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        certSerialNumber_ = value;
        onChanged();
        return this;
      }

      private long certNotAfter_ ;
      /**
       * <pre>
       * Node certificate not_after (seconds since unix epoch)
       * </pre>
       *
       * <code>int64 cert_not_after = 4;</code>
       */
      public long getCertNotAfter() {
        return certNotAfter_;
      }
      /**
       * <pre>
       * Node certificate not_after (seconds since unix epoch)
       * </pre>
       *
       * <code>int64 cert_not_after = 4;</code>
       */
      public Builder setCertNotAfter(long value) {
        
        certNotAfter_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Node certificate not_after (seconds since unix epoch)
       * </pre>
       *
       * <code>int64 cert_not_after = 4;</code>
       */
      public Builder clearCertNotAfter() {
        
        certNotAfter_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:spire.common.AttestedNode)
    }

    // @@protoc_insertion_point(class_scope:spire.common.AttestedNode)
    private static final spire.common.Common.AttestedNode DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new spire.common.Common.AttestedNode();
    }

    public static spire.common.Common.AttestedNode getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AttestedNode>
        PARSER = new com.google.protobuf.AbstractParser<AttestedNode>() {
      public AttestedNode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new AttestedNode(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AttestedNode> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<AttestedNode> getParserForType() {
      return PARSER;
    }

    public spire.common.Common.AttestedNode getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RegistrationEntryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spire.common.RegistrationEntry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** A list of selectors. 
     * </pre>
     *
     * <code>repeated .spire.common.Selector selectors = 1;</code>
     */
    java.util.List<spire.common.Common.Selector> 
        getSelectorsList();
    /**
     * <pre>
     ** A list of selectors. 
     * </pre>
     *
     * <code>repeated .spire.common.Selector selectors = 1;</code>
     */
    spire.common.Common.Selector getSelectors(int index);
    /**
     * <pre>
     ** A list of selectors. 
     * </pre>
     *
     * <code>repeated .spire.common.Selector selectors = 1;</code>
     */
    int getSelectorsCount();
    /**
     * <pre>
     ** A list of selectors. 
     * </pre>
     *
     * <code>repeated .spire.common.Selector selectors = 1;</code>
     */
    java.util.List<? extends spire.common.Common.SelectorOrBuilder> 
        getSelectorsOrBuilderList();
    /**
     * <pre>
     ** A list of selectors. 
     * </pre>
     *
     * <code>repeated .spire.common.Selector selectors = 1;</code>
     */
    spire.common.Common.SelectorOrBuilder getSelectorsOrBuilder(
            int index);

    /**
     * <pre>
     ** The SPIFFE ID of an entity that is authorized to attest the validity
     *of a selector 
     * </pre>
     *
     * <code>string parent_id = 2;</code>
     */
    String getParentId();
    /**
     * <pre>
     ** The SPIFFE ID of an entity that is authorized to attest the validity
     *of a selector 
     * </pre>
     *
     * <code>string parent_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getParentIdBytes();

    /**
     * <pre>
     ** The SPIFFE ID is a structured string used to identify a resource or
     *caller. It is defined as a URI comprising a “trust domain” and an
     *associated path. 
     * </pre>
     *
     * <code>string spiffe_id = 3;</code>
     */
    String getSpiffeId();
    /**
     * <pre>
     ** The SPIFFE ID is a structured string used to identify a resource or
     *caller. It is defined as a URI comprising a “trust domain” and an
     *associated path. 
     * </pre>
     *
     * <code>string spiffe_id = 3;</code>
     */
    com.google.protobuf.ByteString
        getSpiffeIdBytes();

    /**
     * <pre>
     ** Time to live. 
     * </pre>
     *
     * <code>int32 ttl = 4;</code>
     */
    int getTtl();

    /**
     * <pre>
     ** A list of federated trust domain SPIFFE IDs. 
     * </pre>
     *
     * <code>repeated string federates_with = 5;</code>
     */
    java.util.List<String>
        getFederatesWithList();
    /**
     * <pre>
     ** A list of federated trust domain SPIFFE IDs. 
     * </pre>
     *
     * <code>repeated string federates_with = 5;</code>
     */
    int getFederatesWithCount();
    /**
     * <pre>
     ** A list of federated trust domain SPIFFE IDs. 
     * </pre>
     *
     * <code>repeated string federates_with = 5;</code>
     */
    String getFederatesWith(int index);
    /**
     * <pre>
     ** A list of federated trust domain SPIFFE IDs. 
     * </pre>
     *
     * <code>repeated string federates_with = 5;</code>
     */
    com.google.protobuf.ByteString
        getFederatesWithBytes(int index);

    /**
     * <pre>
     ** Entry ID 
     * </pre>
     *
     * <code>string entry_id = 6;</code>
     */
    String getEntryId();
    /**
     * <pre>
     ** Entry ID 
     * </pre>
     *
     * <code>string entry_id = 6;</code>
     */
    com.google.protobuf.ByteString
        getEntryIdBytes();

    /**
     * <pre>
     ** Whether or not the workload is an admin workload. Admin workloads
     *can use their SVID's to authenticate with the Registration API, for
     *example. 
     * </pre>
     *
     * <code>bool admin = 7;</code>
     */
    boolean getAdmin();

    /**
     * <pre>
     ** To enable signing CA CSR in upstream spire server  
     * </pre>
     *
     * <code>bool downstream = 8;</code>
     */
    boolean getDownstream();
  }
  /**
   * <pre>
   ** This is a curated record that the Server uses to set up and
   *manage the various registered nodes and workloads that are controlled by it. 
   * </pre>
   *
   * Protobuf type {@code spire.common.RegistrationEntry}
   */
  public  static final class RegistrationEntry extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spire.common.RegistrationEntry)
      RegistrationEntryOrBuilder {
    // Use RegistrationEntry.newBuilder() to construct.
    private RegistrationEntry(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RegistrationEntry() {
      selectors_ = java.util.Collections.emptyList();
      parentId_ = "";
      spiffeId_ = "";
      ttl_ = 0;
      federatesWith_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      entryId_ = "";
      admin_ = false;
      downstream_ = false;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RegistrationEntry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                selectors_ = new java.util.ArrayList<spire.common.Common.Selector>();
                mutable_bitField0_ |= 0x00000001;
              }
              selectors_.add(
                  input.readMessage(spire.common.Common.Selector.parser(), extensionRegistry));
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              parentId_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              spiffeId_ = s;
              break;
            }
            case 32: {

              ttl_ = input.readInt32();
              break;
            }
            case 42: {
              String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                federatesWith_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000010;
              }
              federatesWith_.add(s);
              break;
            }
            case 50: {
              String s = input.readStringRequireUtf8();

              entryId_ = s;
              break;
            }
            case 56: {

              admin_ = input.readBool();
              break;
            }
            case 64: {

              downstream_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          selectors_ = java.util.Collections.unmodifiableList(selectors_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          federatesWith_ = federatesWith_.getUnmodifiableView();
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return spire.common.Common.internal_static_spire_common_RegistrationEntry_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return spire.common.Common.internal_static_spire_common_RegistrationEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              spire.common.Common.RegistrationEntry.class, spire.common.Common.RegistrationEntry.Builder.class);
    }

    private int bitField0_;
    public static final int SELECTORS_FIELD_NUMBER = 1;
    private java.util.List<spire.common.Common.Selector> selectors_;
    /**
     * <pre>
     ** A list of selectors. 
     * </pre>
     *
     * <code>repeated .spire.common.Selector selectors = 1;</code>
     */
    public java.util.List<spire.common.Common.Selector> getSelectorsList() {
      return selectors_;
    }
    /**
     * <pre>
     ** A list of selectors. 
     * </pre>
     *
     * <code>repeated .spire.common.Selector selectors = 1;</code>
     */
    public java.util.List<? extends spire.common.Common.SelectorOrBuilder> 
        getSelectorsOrBuilderList() {
      return selectors_;
    }
    /**
     * <pre>
     ** A list of selectors. 
     * </pre>
     *
     * <code>repeated .spire.common.Selector selectors = 1;</code>
     */
    public int getSelectorsCount() {
      return selectors_.size();
    }
    /**
     * <pre>
     ** A list of selectors. 
     * </pre>
     *
     * <code>repeated .spire.common.Selector selectors = 1;</code>
     */
    public spire.common.Common.Selector getSelectors(int index) {
      return selectors_.get(index);
    }
    /**
     * <pre>
     ** A list of selectors. 
     * </pre>
     *
     * <code>repeated .spire.common.Selector selectors = 1;</code>
     */
    public spire.common.Common.SelectorOrBuilder getSelectorsOrBuilder(
        int index) {
      return selectors_.get(index);
    }

    public static final int PARENT_ID_FIELD_NUMBER = 2;
    private volatile Object parentId_;
    /**
     * <pre>
     ** The SPIFFE ID of an entity that is authorized to attest the validity
     *of a selector 
     * </pre>
     *
     * <code>string parent_id = 2;</code>
     */
    public String getParentId() {
      Object ref = parentId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        parentId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** The SPIFFE ID of an entity that is authorized to attest the validity
     *of a selector 
     * </pre>
     *
     * <code>string parent_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getParentIdBytes() {
      Object ref = parentId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        parentId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SPIFFE_ID_FIELD_NUMBER = 3;
    private volatile Object spiffeId_;
    /**
     * <pre>
     ** The SPIFFE ID is a structured string used to identify a resource or
     *caller. It is defined as a URI comprising a “trust domain” and an
     *associated path. 
     * </pre>
     *
     * <code>string spiffe_id = 3;</code>
     */
    public String getSpiffeId() {
      Object ref = spiffeId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        spiffeId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** The SPIFFE ID is a structured string used to identify a resource or
     *caller. It is defined as a URI comprising a “trust domain” and an
     *associated path. 
     * </pre>
     *
     * <code>string spiffe_id = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSpiffeIdBytes() {
      Object ref = spiffeId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        spiffeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TTL_FIELD_NUMBER = 4;
    private int ttl_;
    /**
     * <pre>
     ** Time to live. 
     * </pre>
     *
     * <code>int32 ttl = 4;</code>
     */
    public int getTtl() {
      return ttl_;
    }

    public static final int FEDERATES_WITH_FIELD_NUMBER = 5;
    private com.google.protobuf.LazyStringList federatesWith_;
    /**
     * <pre>
     ** A list of federated trust domain SPIFFE IDs. 
     * </pre>
     *
     * <code>repeated string federates_with = 5;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getFederatesWithList() {
      return federatesWith_;
    }
    /**
     * <pre>
     ** A list of federated trust domain SPIFFE IDs. 
     * </pre>
     *
     * <code>repeated string federates_with = 5;</code>
     */
    public int getFederatesWithCount() {
      return federatesWith_.size();
    }
    /**
     * <pre>
     ** A list of federated trust domain SPIFFE IDs. 
     * </pre>
     *
     * <code>repeated string federates_with = 5;</code>
     */
    public String getFederatesWith(int index) {
      return federatesWith_.get(index);
    }
    /**
     * <pre>
     ** A list of federated trust domain SPIFFE IDs. 
     * </pre>
     *
     * <code>repeated string federates_with = 5;</code>
     */
    public com.google.protobuf.ByteString
        getFederatesWithBytes(int index) {
      return federatesWith_.getByteString(index);
    }

    public static final int ENTRY_ID_FIELD_NUMBER = 6;
    private volatile Object entryId_;
    /**
     * <pre>
     ** Entry ID 
     * </pre>
     *
     * <code>string entry_id = 6;</code>
     */
    public String getEntryId() {
      Object ref = entryId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        entryId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** Entry ID 
     * </pre>
     *
     * <code>string entry_id = 6;</code>
     */
    public com.google.protobuf.ByteString
        getEntryIdBytes() {
      Object ref = entryId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        entryId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ADMIN_FIELD_NUMBER = 7;
    private boolean admin_;
    /**
     * <pre>
     ** Whether or not the workload is an admin workload. Admin workloads
     *can use their SVID's to authenticate with the Registration API, for
     *example. 
     * </pre>
     *
     * <code>bool admin = 7;</code>
     */
    public boolean getAdmin() {
      return admin_;
    }

    public static final int DOWNSTREAM_FIELD_NUMBER = 8;
    private boolean downstream_;
    /**
     * <pre>
     ** To enable signing CA CSR in upstream spire server  
     * </pre>
     *
     * <code>bool downstream = 8;</code>
     */
    public boolean getDownstream() {
      return downstream_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < selectors_.size(); i++) {
        output.writeMessage(1, selectors_.get(i));
      }
      if (!getParentIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, parentId_);
      }
      if (!getSpiffeIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, spiffeId_);
      }
      if (ttl_ != 0) {
        output.writeInt32(4, ttl_);
      }
      for (int i = 0; i < federatesWith_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, federatesWith_.getRaw(i));
      }
      if (!getEntryIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, entryId_);
      }
      if (admin_ != false) {
        output.writeBool(7, admin_);
      }
      if (downstream_ != false) {
        output.writeBool(8, downstream_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < selectors_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, selectors_.get(i));
      }
      if (!getParentIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, parentId_);
      }
      if (!getSpiffeIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, spiffeId_);
      }
      if (ttl_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, ttl_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < federatesWith_.size(); i++) {
          dataSize += computeStringSizeNoTag(federatesWith_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getFederatesWithList().size();
      }
      if (!getEntryIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, entryId_);
      }
      if (admin_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, admin_);
      }
      if (downstream_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, downstream_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof spire.common.Common.RegistrationEntry)) {
        return super.equals(obj);
      }
      spire.common.Common.RegistrationEntry other = (spire.common.Common.RegistrationEntry) obj;

      boolean result = true;
      result = result && getSelectorsList()
          .equals(other.getSelectorsList());
      result = result && getParentId()
          .equals(other.getParentId());
      result = result && getSpiffeId()
          .equals(other.getSpiffeId());
      result = result && (getTtl()
          == other.getTtl());
      result = result && getFederatesWithList()
          .equals(other.getFederatesWithList());
      result = result && getEntryId()
          .equals(other.getEntryId());
      result = result && (getAdmin()
          == other.getAdmin());
      result = result && (getDownstream()
          == other.getDownstream());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getSelectorsCount() > 0) {
        hash = (37 * hash) + SELECTORS_FIELD_NUMBER;
        hash = (53 * hash) + getSelectorsList().hashCode();
      }
      hash = (37 * hash) + PARENT_ID_FIELD_NUMBER;
      hash = (53 * hash) + getParentId().hashCode();
      hash = (37 * hash) + SPIFFE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getSpiffeId().hashCode();
      hash = (37 * hash) + TTL_FIELD_NUMBER;
      hash = (53 * hash) + getTtl();
      if (getFederatesWithCount() > 0) {
        hash = (37 * hash) + FEDERATES_WITH_FIELD_NUMBER;
        hash = (53 * hash) + getFederatesWithList().hashCode();
      }
      hash = (37 * hash) + ENTRY_ID_FIELD_NUMBER;
      hash = (53 * hash) + getEntryId().hashCode();
      hash = (37 * hash) + ADMIN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getAdmin());
      hash = (37 * hash) + DOWNSTREAM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDownstream());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static spire.common.Common.RegistrationEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static spire.common.Common.RegistrationEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static spire.common.Common.RegistrationEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static spire.common.Common.RegistrationEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static spire.common.Common.RegistrationEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static spire.common.Common.RegistrationEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static spire.common.Common.RegistrationEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static spire.common.Common.RegistrationEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static spire.common.Common.RegistrationEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static spire.common.Common.RegistrationEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(spire.common.Common.RegistrationEntry prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** This is a curated record that the Server uses to set up and
     *manage the various registered nodes and workloads that are controlled by it. 
     * </pre>
     *
     * Protobuf type {@code spire.common.RegistrationEntry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spire.common.RegistrationEntry)
        spire.common.Common.RegistrationEntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return spire.common.Common.internal_static_spire_common_RegistrationEntry_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return spire.common.Common.internal_static_spire_common_RegistrationEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                spire.common.Common.RegistrationEntry.class, spire.common.Common.RegistrationEntry.Builder.class);
      }

      // Construct using spire.common.Common.RegistrationEntry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSelectorsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (selectorsBuilder_ == null) {
          selectors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          selectorsBuilder_.clear();
        }
        parentId_ = "";

        spiffeId_ = "";

        ttl_ = 0;

        federatesWith_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        entryId_ = "";

        admin_ = false;

        downstream_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return spire.common.Common.internal_static_spire_common_RegistrationEntry_descriptor;
      }

      public spire.common.Common.RegistrationEntry getDefaultInstanceForType() {
        return spire.common.Common.RegistrationEntry.getDefaultInstance();
      }

      public spire.common.Common.RegistrationEntry build() {
        spire.common.Common.RegistrationEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public spire.common.Common.RegistrationEntry buildPartial() {
        spire.common.Common.RegistrationEntry result = new spire.common.Common.RegistrationEntry(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (selectorsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            selectors_ = java.util.Collections.unmodifiableList(selectors_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.selectors_ = selectors_;
        } else {
          result.selectors_ = selectorsBuilder_.build();
        }
        result.parentId_ = parentId_;
        result.spiffeId_ = spiffeId_;
        result.ttl_ = ttl_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          federatesWith_ = federatesWith_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.federatesWith_ = federatesWith_;
        result.entryId_ = entryId_;
        result.admin_ = admin_;
        result.downstream_ = downstream_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof spire.common.Common.RegistrationEntry) {
          return mergeFrom((spire.common.Common.RegistrationEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(spire.common.Common.RegistrationEntry other) {
        if (other == spire.common.Common.RegistrationEntry.getDefaultInstance()) return this;
        if (selectorsBuilder_ == null) {
          if (!other.selectors_.isEmpty()) {
            if (selectors_.isEmpty()) {
              selectors_ = other.selectors_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSelectorsIsMutable();
              selectors_.addAll(other.selectors_);
            }
            onChanged();
          }
        } else {
          if (!other.selectors_.isEmpty()) {
            if (selectorsBuilder_.isEmpty()) {
              selectorsBuilder_.dispose();
              selectorsBuilder_ = null;
              selectors_ = other.selectors_;
              bitField0_ = (bitField0_ & ~0x00000001);
              selectorsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSelectorsFieldBuilder() : null;
            } else {
              selectorsBuilder_.addAllMessages(other.selectors_);
            }
          }
        }
        if (!other.getParentId().isEmpty()) {
          parentId_ = other.parentId_;
          onChanged();
        }
        if (!other.getSpiffeId().isEmpty()) {
          spiffeId_ = other.spiffeId_;
          onChanged();
        }
        if (other.getTtl() != 0) {
          setTtl(other.getTtl());
        }
        if (!other.federatesWith_.isEmpty()) {
          if (federatesWith_.isEmpty()) {
            federatesWith_ = other.federatesWith_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureFederatesWithIsMutable();
            federatesWith_.addAll(other.federatesWith_);
          }
          onChanged();
        }
        if (!other.getEntryId().isEmpty()) {
          entryId_ = other.entryId_;
          onChanged();
        }
        if (other.getAdmin() != false) {
          setAdmin(other.getAdmin());
        }
        if (other.getDownstream() != false) {
          setDownstream(other.getDownstream());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        spire.common.Common.RegistrationEntry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (spire.common.Common.RegistrationEntry) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<spire.common.Common.Selector> selectors_ =
        java.util.Collections.emptyList();
      private void ensureSelectorsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          selectors_ = new java.util.ArrayList<spire.common.Common.Selector>(selectors_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          spire.common.Common.Selector, spire.common.Common.Selector.Builder, spire.common.Common.SelectorOrBuilder> selectorsBuilder_;

      /**
       * <pre>
       ** A list of selectors. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector selectors = 1;</code>
       */
      public java.util.List<spire.common.Common.Selector> getSelectorsList() {
        if (selectorsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(selectors_);
        } else {
          return selectorsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       ** A list of selectors. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector selectors = 1;</code>
       */
      public int getSelectorsCount() {
        if (selectorsBuilder_ == null) {
          return selectors_.size();
        } else {
          return selectorsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       ** A list of selectors. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector selectors = 1;</code>
       */
      public spire.common.Common.Selector getSelectors(int index) {
        if (selectorsBuilder_ == null) {
          return selectors_.get(index);
        } else {
          return selectorsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       ** A list of selectors. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector selectors = 1;</code>
       */
      public Builder setSelectors(
          int index, spire.common.Common.Selector value) {
        if (selectorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSelectorsIsMutable();
          selectors_.set(index, value);
          onChanged();
        } else {
          selectorsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** A list of selectors. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector selectors = 1;</code>
       */
      public Builder setSelectors(
          int index, spire.common.Common.Selector.Builder builderForValue) {
        if (selectorsBuilder_ == null) {
          ensureSelectorsIsMutable();
          selectors_.set(index, builderForValue.build());
          onChanged();
        } else {
          selectorsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** A list of selectors. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector selectors = 1;</code>
       */
      public Builder addSelectors(spire.common.Common.Selector value) {
        if (selectorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSelectorsIsMutable();
          selectors_.add(value);
          onChanged();
        } else {
          selectorsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       ** A list of selectors. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector selectors = 1;</code>
       */
      public Builder addSelectors(
          int index, spire.common.Common.Selector value) {
        if (selectorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSelectorsIsMutable();
          selectors_.add(index, value);
          onChanged();
        } else {
          selectorsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** A list of selectors. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector selectors = 1;</code>
       */
      public Builder addSelectors(
          spire.common.Common.Selector.Builder builderForValue) {
        if (selectorsBuilder_ == null) {
          ensureSelectorsIsMutable();
          selectors_.add(builderForValue.build());
          onChanged();
        } else {
          selectorsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** A list of selectors. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector selectors = 1;</code>
       */
      public Builder addSelectors(
          int index, spire.common.Common.Selector.Builder builderForValue) {
        if (selectorsBuilder_ == null) {
          ensureSelectorsIsMutable();
          selectors_.add(index, builderForValue.build());
          onChanged();
        } else {
          selectorsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** A list of selectors. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector selectors = 1;</code>
       */
      public Builder addAllSelectors(
          Iterable<? extends spire.common.Common.Selector> values) {
        if (selectorsBuilder_ == null) {
          ensureSelectorsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, selectors_);
          onChanged();
        } else {
          selectorsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       ** A list of selectors. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector selectors = 1;</code>
       */
      public Builder clearSelectors() {
        if (selectorsBuilder_ == null) {
          selectors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          selectorsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       ** A list of selectors. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector selectors = 1;</code>
       */
      public Builder removeSelectors(int index) {
        if (selectorsBuilder_ == null) {
          ensureSelectorsIsMutable();
          selectors_.remove(index);
          onChanged();
        } else {
          selectorsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       ** A list of selectors. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector selectors = 1;</code>
       */
      public spire.common.Common.Selector.Builder getSelectorsBuilder(
          int index) {
        return getSelectorsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       ** A list of selectors. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector selectors = 1;</code>
       */
      public spire.common.Common.SelectorOrBuilder getSelectorsOrBuilder(
          int index) {
        if (selectorsBuilder_ == null) {
          return selectors_.get(index);  } else {
          return selectorsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       ** A list of selectors. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector selectors = 1;</code>
       */
      public java.util.List<? extends spire.common.Common.SelectorOrBuilder> 
           getSelectorsOrBuilderList() {
        if (selectorsBuilder_ != null) {
          return selectorsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(selectors_);
        }
      }
      /**
       * <pre>
       ** A list of selectors. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector selectors = 1;</code>
       */
      public spire.common.Common.Selector.Builder addSelectorsBuilder() {
        return getSelectorsFieldBuilder().addBuilder(
            spire.common.Common.Selector.getDefaultInstance());
      }
      /**
       * <pre>
       ** A list of selectors. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector selectors = 1;</code>
       */
      public spire.common.Common.Selector.Builder addSelectorsBuilder(
          int index) {
        return getSelectorsFieldBuilder().addBuilder(
            index, spire.common.Common.Selector.getDefaultInstance());
      }
      /**
       * <pre>
       ** A list of selectors. 
       * </pre>
       *
       * <code>repeated .spire.common.Selector selectors = 1;</code>
       */
      public java.util.List<spire.common.Common.Selector.Builder> 
           getSelectorsBuilderList() {
        return getSelectorsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          spire.common.Common.Selector, spire.common.Common.Selector.Builder, spire.common.Common.SelectorOrBuilder> 
          getSelectorsFieldBuilder() {
        if (selectorsBuilder_ == null) {
          selectorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              spire.common.Common.Selector, spire.common.Common.Selector.Builder, spire.common.Common.SelectorOrBuilder>(
                  selectors_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          selectors_ = null;
        }
        return selectorsBuilder_;
      }

      private Object parentId_ = "";
      /**
       * <pre>
       ** The SPIFFE ID of an entity that is authorized to attest the validity
       *of a selector 
       * </pre>
       *
       * <code>string parent_id = 2;</code>
       */
      public String getParentId() {
        Object ref = parentId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          parentId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** The SPIFFE ID of an entity that is authorized to attest the validity
       *of a selector 
       * </pre>
       *
       * <code>string parent_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getParentIdBytes() {
        Object ref = parentId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          parentId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** The SPIFFE ID of an entity that is authorized to attest the validity
       *of a selector 
       * </pre>
       *
       * <code>string parent_id = 2;</code>
       */
      public Builder setParentId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        parentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** The SPIFFE ID of an entity that is authorized to attest the validity
       *of a selector 
       * </pre>
       *
       * <code>string parent_id = 2;</code>
       */
      public Builder clearParentId() {
        
        parentId_ = getDefaultInstance().getParentId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** The SPIFFE ID of an entity that is authorized to attest the validity
       *of a selector 
       * </pre>
       *
       * <code>string parent_id = 2;</code>
       */
      public Builder setParentIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        parentId_ = value;
        onChanged();
        return this;
      }

      private Object spiffeId_ = "";
      /**
       * <pre>
       ** The SPIFFE ID is a structured string used to identify a resource or
       *caller. It is defined as a URI comprising a “trust domain” and an
       *associated path. 
       * </pre>
       *
       * <code>string spiffe_id = 3;</code>
       */
      public String getSpiffeId() {
        Object ref = spiffeId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          spiffeId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** The SPIFFE ID is a structured string used to identify a resource or
       *caller. It is defined as a URI comprising a “trust domain” and an
       *associated path. 
       * </pre>
       *
       * <code>string spiffe_id = 3;</code>
       */
      public com.google.protobuf.ByteString
          getSpiffeIdBytes() {
        Object ref = spiffeId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          spiffeId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** The SPIFFE ID is a structured string used to identify a resource or
       *caller. It is defined as a URI comprising a “trust domain” and an
       *associated path. 
       * </pre>
       *
       * <code>string spiffe_id = 3;</code>
       */
      public Builder setSpiffeId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        spiffeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** The SPIFFE ID is a structured string used to identify a resource or
       *caller. It is defined as a URI comprising a “trust domain” and an
       *associated path. 
       * </pre>
       *
       * <code>string spiffe_id = 3;</code>
       */
      public Builder clearSpiffeId() {
        
        spiffeId_ = getDefaultInstance().getSpiffeId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** The SPIFFE ID is a structured string used to identify a resource or
       *caller. It is defined as a URI comprising a “trust domain” and an
       *associated path. 
       * </pre>
       *
       * <code>string spiffe_id = 3;</code>
       */
      public Builder setSpiffeIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        spiffeId_ = value;
        onChanged();
        return this;
      }

      private int ttl_ ;
      /**
       * <pre>
       ** Time to live. 
       * </pre>
       *
       * <code>int32 ttl = 4;</code>
       */
      public int getTtl() {
        return ttl_;
      }
      /**
       * <pre>
       ** Time to live. 
       * </pre>
       *
       * <code>int32 ttl = 4;</code>
       */
      public Builder setTtl(int value) {
        
        ttl_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** Time to live. 
       * </pre>
       *
       * <code>int32 ttl = 4;</code>
       */
      public Builder clearTtl() {
        
        ttl_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList federatesWith_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureFederatesWithIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          federatesWith_ = new com.google.protobuf.LazyStringArrayList(federatesWith_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <pre>
       ** A list of federated trust domain SPIFFE IDs. 
       * </pre>
       *
       * <code>repeated string federates_with = 5;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getFederatesWithList() {
        return federatesWith_.getUnmodifiableView();
      }
      /**
       * <pre>
       ** A list of federated trust domain SPIFFE IDs. 
       * </pre>
       *
       * <code>repeated string federates_with = 5;</code>
       */
      public int getFederatesWithCount() {
        return federatesWith_.size();
      }
      /**
       * <pre>
       ** A list of federated trust domain SPIFFE IDs. 
       * </pre>
       *
       * <code>repeated string federates_with = 5;</code>
       */
      public String getFederatesWith(int index) {
        return federatesWith_.get(index);
      }
      /**
       * <pre>
       ** A list of federated trust domain SPIFFE IDs. 
       * </pre>
       *
       * <code>repeated string federates_with = 5;</code>
       */
      public com.google.protobuf.ByteString
          getFederatesWithBytes(int index) {
        return federatesWith_.getByteString(index);
      }
      /**
       * <pre>
       ** A list of federated trust domain SPIFFE IDs. 
       * </pre>
       *
       * <code>repeated string federates_with = 5;</code>
       */
      public Builder setFederatesWith(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureFederatesWithIsMutable();
        federatesWith_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** A list of federated trust domain SPIFFE IDs. 
       * </pre>
       *
       * <code>repeated string federates_with = 5;</code>
       */
      public Builder addFederatesWith(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureFederatesWithIsMutable();
        federatesWith_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** A list of federated trust domain SPIFFE IDs. 
       * </pre>
       *
       * <code>repeated string federates_with = 5;</code>
       */
      public Builder addAllFederatesWith(
          Iterable<String> values) {
        ensureFederatesWithIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, federatesWith_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** A list of federated trust domain SPIFFE IDs. 
       * </pre>
       *
       * <code>repeated string federates_with = 5;</code>
       */
      public Builder clearFederatesWith() {
        federatesWith_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** A list of federated trust domain SPIFFE IDs. 
       * </pre>
       *
       * <code>repeated string federates_with = 5;</code>
       */
      public Builder addFederatesWithBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureFederatesWithIsMutable();
        federatesWith_.add(value);
        onChanged();
        return this;
      }

      private Object entryId_ = "";
      /**
       * <pre>
       ** Entry ID 
       * </pre>
       *
       * <code>string entry_id = 6;</code>
       */
      public String getEntryId() {
        Object ref = entryId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          entryId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** Entry ID 
       * </pre>
       *
       * <code>string entry_id = 6;</code>
       */
      public com.google.protobuf.ByteString
          getEntryIdBytes() {
        Object ref = entryId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          entryId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** Entry ID 
       * </pre>
       *
       * <code>string entry_id = 6;</code>
       */
      public Builder setEntryId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        entryId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** Entry ID 
       * </pre>
       *
       * <code>string entry_id = 6;</code>
       */
      public Builder clearEntryId() {
        
        entryId_ = getDefaultInstance().getEntryId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** Entry ID 
       * </pre>
       *
       * <code>string entry_id = 6;</code>
       */
      public Builder setEntryIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        entryId_ = value;
        onChanged();
        return this;
      }

      private boolean admin_ ;
      /**
       * <pre>
       ** Whether or not the workload is an admin workload. Admin workloads
       *can use their SVID's to authenticate with the Registration API, for
       *example. 
       * </pre>
       *
       * <code>bool admin = 7;</code>
       */
      public boolean getAdmin() {
        return admin_;
      }
      /**
       * <pre>
       ** Whether or not the workload is an admin workload. Admin workloads
       *can use their SVID's to authenticate with the Registration API, for
       *example. 
       * </pre>
       *
       * <code>bool admin = 7;</code>
       */
      public Builder setAdmin(boolean value) {
        
        admin_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** Whether or not the workload is an admin workload. Admin workloads
       *can use their SVID's to authenticate with the Registration API, for
       *example. 
       * </pre>
       *
       * <code>bool admin = 7;</code>
       */
      public Builder clearAdmin() {
        
        admin_ = false;
        onChanged();
        return this;
      }

      private boolean downstream_ ;
      /**
       * <pre>
       ** To enable signing CA CSR in upstream spire server  
       * </pre>
       *
       * <code>bool downstream = 8;</code>
       */
      public boolean getDownstream() {
        return downstream_;
      }
      /**
       * <pre>
       ** To enable signing CA CSR in upstream spire server  
       * </pre>
       *
       * <code>bool downstream = 8;</code>
       */
      public Builder setDownstream(boolean value) {
        
        downstream_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** To enable signing CA CSR in upstream spire server  
       * </pre>
       *
       * <code>bool downstream = 8;</code>
       */
      public Builder clearDownstream() {
        
        downstream_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:spire.common.RegistrationEntry)
    }

    // @@protoc_insertion_point(class_scope:spire.common.RegistrationEntry)
    private static final spire.common.Common.RegistrationEntry DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new spire.common.Common.RegistrationEntry();
    }

    public static spire.common.Common.RegistrationEntry getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RegistrationEntry>
        PARSER = new com.google.protobuf.AbstractParser<RegistrationEntry>() {
      public RegistrationEntry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RegistrationEntry(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RegistrationEntry> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RegistrationEntry> getParserForType() {
      return PARSER;
    }

    public spire.common.Common.RegistrationEntry getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RegistrationEntriesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spire.common.RegistrationEntries)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** A list of RegistrationEntry. 
     * </pre>
     *
     * <code>repeated .spire.common.RegistrationEntry entries = 1;</code>
     */
    java.util.List<spire.common.Common.RegistrationEntry> 
        getEntriesList();
    /**
     * <pre>
     ** A list of RegistrationEntry. 
     * </pre>
     *
     * <code>repeated .spire.common.RegistrationEntry entries = 1;</code>
     */
    spire.common.Common.RegistrationEntry getEntries(int index);
    /**
     * <pre>
     ** A list of RegistrationEntry. 
     * </pre>
     *
     * <code>repeated .spire.common.RegistrationEntry entries = 1;</code>
     */
    int getEntriesCount();
    /**
     * <pre>
     ** A list of RegistrationEntry. 
     * </pre>
     *
     * <code>repeated .spire.common.RegistrationEntry entries = 1;</code>
     */
    java.util.List<? extends spire.common.Common.RegistrationEntryOrBuilder> 
        getEntriesOrBuilderList();
    /**
     * <pre>
     ** A list of RegistrationEntry. 
     * </pre>
     *
     * <code>repeated .spire.common.RegistrationEntry entries = 1;</code>
     */
    spire.common.Common.RegistrationEntryOrBuilder getEntriesOrBuilder(
            int index);
  }
  /**
   * <pre>
   ** A list of registration entries. 
   * </pre>
   *
   * Protobuf type {@code spire.common.RegistrationEntries}
   */
  public  static final class RegistrationEntries extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spire.common.RegistrationEntries)
      RegistrationEntriesOrBuilder {
    // Use RegistrationEntries.newBuilder() to construct.
    private RegistrationEntries(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RegistrationEntries() {
      entries_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RegistrationEntries(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                entries_ = new java.util.ArrayList<spire.common.Common.RegistrationEntry>();
                mutable_bitField0_ |= 0x00000001;
              }
              entries_.add(
                  input.readMessage(spire.common.Common.RegistrationEntry.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          entries_ = java.util.Collections.unmodifiableList(entries_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return spire.common.Common.internal_static_spire_common_RegistrationEntries_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return spire.common.Common.internal_static_spire_common_RegistrationEntries_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              spire.common.Common.RegistrationEntries.class, spire.common.Common.RegistrationEntries.Builder.class);
    }

    public static final int ENTRIES_FIELD_NUMBER = 1;
    private java.util.List<spire.common.Common.RegistrationEntry> entries_;
    /**
     * <pre>
     ** A list of RegistrationEntry. 
     * </pre>
     *
     * <code>repeated .spire.common.RegistrationEntry entries = 1;</code>
     */
    public java.util.List<spire.common.Common.RegistrationEntry> getEntriesList() {
      return entries_;
    }
    /**
     * <pre>
     ** A list of RegistrationEntry. 
     * </pre>
     *
     * <code>repeated .spire.common.RegistrationEntry entries = 1;</code>
     */
    public java.util.List<? extends spire.common.Common.RegistrationEntryOrBuilder> 
        getEntriesOrBuilderList() {
      return entries_;
    }
    /**
     * <pre>
     ** A list of RegistrationEntry. 
     * </pre>
     *
     * <code>repeated .spire.common.RegistrationEntry entries = 1;</code>
     */
    public int getEntriesCount() {
      return entries_.size();
    }
    /**
     * <pre>
     ** A list of RegistrationEntry. 
     * </pre>
     *
     * <code>repeated .spire.common.RegistrationEntry entries = 1;</code>
     */
    public spire.common.Common.RegistrationEntry getEntries(int index) {
      return entries_.get(index);
    }
    /**
     * <pre>
     ** A list of RegistrationEntry. 
     * </pre>
     *
     * <code>repeated .spire.common.RegistrationEntry entries = 1;</code>
     */
    public spire.common.Common.RegistrationEntryOrBuilder getEntriesOrBuilder(
        int index) {
      return entries_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < entries_.size(); i++) {
        output.writeMessage(1, entries_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < entries_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, entries_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof spire.common.Common.RegistrationEntries)) {
        return super.equals(obj);
      }
      spire.common.Common.RegistrationEntries other = (spire.common.Common.RegistrationEntries) obj;

      boolean result = true;
      result = result && getEntriesList()
          .equals(other.getEntriesList());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getEntriesCount() > 0) {
        hash = (37 * hash) + ENTRIES_FIELD_NUMBER;
        hash = (53 * hash) + getEntriesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static spire.common.Common.RegistrationEntries parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static spire.common.Common.RegistrationEntries parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static spire.common.Common.RegistrationEntries parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static spire.common.Common.RegistrationEntries parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static spire.common.Common.RegistrationEntries parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static spire.common.Common.RegistrationEntries parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static spire.common.Common.RegistrationEntries parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static spire.common.Common.RegistrationEntries parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static spire.common.Common.RegistrationEntries parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static spire.common.Common.RegistrationEntries parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(spire.common.Common.RegistrationEntries prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** A list of registration entries. 
     * </pre>
     *
     * Protobuf type {@code spire.common.RegistrationEntries}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spire.common.RegistrationEntries)
        spire.common.Common.RegistrationEntriesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return spire.common.Common.internal_static_spire_common_RegistrationEntries_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return spire.common.Common.internal_static_spire_common_RegistrationEntries_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                spire.common.Common.RegistrationEntries.class, spire.common.Common.RegistrationEntries.Builder.class);
      }

      // Construct using spire.common.Common.RegistrationEntries.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getEntriesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (entriesBuilder_ == null) {
          entries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          entriesBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return spire.common.Common.internal_static_spire_common_RegistrationEntries_descriptor;
      }

      public spire.common.Common.RegistrationEntries getDefaultInstanceForType() {
        return spire.common.Common.RegistrationEntries.getDefaultInstance();
      }

      public spire.common.Common.RegistrationEntries build() {
        spire.common.Common.RegistrationEntries result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public spire.common.Common.RegistrationEntries buildPartial() {
        spire.common.Common.RegistrationEntries result = new spire.common.Common.RegistrationEntries(this);
        int from_bitField0_ = bitField0_;
        if (entriesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            entries_ = java.util.Collections.unmodifiableList(entries_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.entries_ = entries_;
        } else {
          result.entries_ = entriesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof spire.common.Common.RegistrationEntries) {
          return mergeFrom((spire.common.Common.RegistrationEntries)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(spire.common.Common.RegistrationEntries other) {
        if (other == spire.common.Common.RegistrationEntries.getDefaultInstance()) return this;
        if (entriesBuilder_ == null) {
          if (!other.entries_.isEmpty()) {
            if (entries_.isEmpty()) {
              entries_ = other.entries_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureEntriesIsMutable();
              entries_.addAll(other.entries_);
            }
            onChanged();
          }
        } else {
          if (!other.entries_.isEmpty()) {
            if (entriesBuilder_.isEmpty()) {
              entriesBuilder_.dispose();
              entriesBuilder_ = null;
              entries_ = other.entries_;
              bitField0_ = (bitField0_ & ~0x00000001);
              entriesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEntriesFieldBuilder() : null;
            } else {
              entriesBuilder_.addAllMessages(other.entries_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        spire.common.Common.RegistrationEntries parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (spire.common.Common.RegistrationEntries) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<spire.common.Common.RegistrationEntry> entries_ =
        java.util.Collections.emptyList();
      private void ensureEntriesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          entries_ = new java.util.ArrayList<spire.common.Common.RegistrationEntry>(entries_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          spire.common.Common.RegistrationEntry, spire.common.Common.RegistrationEntry.Builder, spire.common.Common.RegistrationEntryOrBuilder> entriesBuilder_;

      /**
       * <pre>
       ** A list of RegistrationEntry. 
       * </pre>
       *
       * <code>repeated .spire.common.RegistrationEntry entries = 1;</code>
       */
      public java.util.List<spire.common.Common.RegistrationEntry> getEntriesList() {
        if (entriesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(entries_);
        } else {
          return entriesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       ** A list of RegistrationEntry. 
       * </pre>
       *
       * <code>repeated .spire.common.RegistrationEntry entries = 1;</code>
       */
      public int getEntriesCount() {
        if (entriesBuilder_ == null) {
          return entries_.size();
        } else {
          return entriesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       ** A list of RegistrationEntry. 
       * </pre>
       *
       * <code>repeated .spire.common.RegistrationEntry entries = 1;</code>
       */
      public spire.common.Common.RegistrationEntry getEntries(int index) {
        if (entriesBuilder_ == null) {
          return entries_.get(index);
        } else {
          return entriesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       ** A list of RegistrationEntry. 
       * </pre>
       *
       * <code>repeated .spire.common.RegistrationEntry entries = 1;</code>
       */
      public Builder setEntries(
          int index, spire.common.Common.RegistrationEntry value) {
        if (entriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntriesIsMutable();
          entries_.set(index, value);
          onChanged();
        } else {
          entriesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** A list of RegistrationEntry. 
       * </pre>
       *
       * <code>repeated .spire.common.RegistrationEntry entries = 1;</code>
       */
      public Builder setEntries(
          int index, spire.common.Common.RegistrationEntry.Builder builderForValue) {
        if (entriesBuilder_ == null) {
          ensureEntriesIsMutable();
          entries_.set(index, builderForValue.build());
          onChanged();
        } else {
          entriesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** A list of RegistrationEntry. 
       * </pre>
       *
       * <code>repeated .spire.common.RegistrationEntry entries = 1;</code>
       */
      public Builder addEntries(spire.common.Common.RegistrationEntry value) {
        if (entriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntriesIsMutable();
          entries_.add(value);
          onChanged();
        } else {
          entriesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       ** A list of RegistrationEntry. 
       * </pre>
       *
       * <code>repeated .spire.common.RegistrationEntry entries = 1;</code>
       */
      public Builder addEntries(
          int index, spire.common.Common.RegistrationEntry value) {
        if (entriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntriesIsMutable();
          entries_.add(index, value);
          onChanged();
        } else {
          entriesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** A list of RegistrationEntry. 
       * </pre>
       *
       * <code>repeated .spire.common.RegistrationEntry entries = 1;</code>
       */
      public Builder addEntries(
          spire.common.Common.RegistrationEntry.Builder builderForValue) {
        if (entriesBuilder_ == null) {
          ensureEntriesIsMutable();
          entries_.add(builderForValue.build());
          onChanged();
        } else {
          entriesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** A list of RegistrationEntry. 
       * </pre>
       *
       * <code>repeated .spire.common.RegistrationEntry entries = 1;</code>
       */
      public Builder addEntries(
          int index, spire.common.Common.RegistrationEntry.Builder builderForValue) {
        if (entriesBuilder_ == null) {
          ensureEntriesIsMutable();
          entries_.add(index, builderForValue.build());
          onChanged();
        } else {
          entriesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** A list of RegistrationEntry. 
       * </pre>
       *
       * <code>repeated .spire.common.RegistrationEntry entries = 1;</code>
       */
      public Builder addAllEntries(
          Iterable<? extends spire.common.Common.RegistrationEntry> values) {
        if (entriesBuilder_ == null) {
          ensureEntriesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, entries_);
          onChanged();
        } else {
          entriesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       ** A list of RegistrationEntry. 
       * </pre>
       *
       * <code>repeated .spire.common.RegistrationEntry entries = 1;</code>
       */
      public Builder clearEntries() {
        if (entriesBuilder_ == null) {
          entries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          entriesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       ** A list of RegistrationEntry. 
       * </pre>
       *
       * <code>repeated .spire.common.RegistrationEntry entries = 1;</code>
       */
      public Builder removeEntries(int index) {
        if (entriesBuilder_ == null) {
          ensureEntriesIsMutable();
          entries_.remove(index);
          onChanged();
        } else {
          entriesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       ** A list of RegistrationEntry. 
       * </pre>
       *
       * <code>repeated .spire.common.RegistrationEntry entries = 1;</code>
       */
      public spire.common.Common.RegistrationEntry.Builder getEntriesBuilder(
          int index) {
        return getEntriesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       ** A list of RegistrationEntry. 
       * </pre>
       *
       * <code>repeated .spire.common.RegistrationEntry entries = 1;</code>
       */
      public spire.common.Common.RegistrationEntryOrBuilder getEntriesOrBuilder(
          int index) {
        if (entriesBuilder_ == null) {
          return entries_.get(index);  } else {
          return entriesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       ** A list of RegistrationEntry. 
       * </pre>
       *
       * <code>repeated .spire.common.RegistrationEntry entries = 1;</code>
       */
      public java.util.List<? extends spire.common.Common.RegistrationEntryOrBuilder> 
           getEntriesOrBuilderList() {
        if (entriesBuilder_ != null) {
          return entriesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(entries_);
        }
      }
      /**
       * <pre>
       ** A list of RegistrationEntry. 
       * </pre>
       *
       * <code>repeated .spire.common.RegistrationEntry entries = 1;</code>
       */
      public spire.common.Common.RegistrationEntry.Builder addEntriesBuilder() {
        return getEntriesFieldBuilder().addBuilder(
            spire.common.Common.RegistrationEntry.getDefaultInstance());
      }
      /**
       * <pre>
       ** A list of RegistrationEntry. 
       * </pre>
       *
       * <code>repeated .spire.common.RegistrationEntry entries = 1;</code>
       */
      public spire.common.Common.RegistrationEntry.Builder addEntriesBuilder(
          int index) {
        return getEntriesFieldBuilder().addBuilder(
            index, spire.common.Common.RegistrationEntry.getDefaultInstance());
      }
      /**
       * <pre>
       ** A list of RegistrationEntry. 
       * </pre>
       *
       * <code>repeated .spire.common.RegistrationEntry entries = 1;</code>
       */
      public java.util.List<spire.common.Common.RegistrationEntry.Builder> 
           getEntriesBuilderList() {
        return getEntriesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          spire.common.Common.RegistrationEntry, spire.common.Common.RegistrationEntry.Builder, spire.common.Common.RegistrationEntryOrBuilder> 
          getEntriesFieldBuilder() {
        if (entriesBuilder_ == null) {
          entriesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              spire.common.Common.RegistrationEntry, spire.common.Common.RegistrationEntry.Builder, spire.common.Common.RegistrationEntryOrBuilder>(
                  entries_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          entries_ = null;
        }
        return entriesBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:spire.common.RegistrationEntries)
    }

    // @@protoc_insertion_point(class_scope:spire.common.RegistrationEntries)
    private static final spire.common.Common.RegistrationEntries DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new spire.common.Common.RegistrationEntries();
    }

    public static spire.common.Common.RegistrationEntries getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RegistrationEntries>
        PARSER = new com.google.protobuf.AbstractParser<RegistrationEntries>() {
      public RegistrationEntries parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RegistrationEntries(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RegistrationEntries> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RegistrationEntries> getParserForType() {
      return PARSER;
    }

    public spire.common.Common.RegistrationEntries getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CertificateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spire.common.Certificate)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bytes der_bytes = 1;</code>
     */
    com.google.protobuf.ByteString getDerBytes();
  }
  /**
   * <pre>
   ** Certificate represents a ASN.1/DER encoded X509 certificate 
   * </pre>
   *
   * Protobuf type {@code spire.common.Certificate}
   */
  public  static final class Certificate extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spire.common.Certificate)
      CertificateOrBuilder {
    // Use Certificate.newBuilder() to construct.
    private Certificate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Certificate() {
      derBytes_ = com.google.protobuf.ByteString.EMPTY;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Certificate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {

              derBytes_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return spire.common.Common.internal_static_spire_common_Certificate_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return spire.common.Common.internal_static_spire_common_Certificate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              spire.common.Common.Certificate.class, spire.common.Common.Certificate.Builder.class);
    }

    public static final int DER_BYTES_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString derBytes_;
    /**
     * <code>bytes der_bytes = 1;</code>
     */
    public com.google.protobuf.ByteString getDerBytes() {
      return derBytes_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!derBytes_.isEmpty()) {
        output.writeBytes(1, derBytes_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!derBytes_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, derBytes_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof spire.common.Common.Certificate)) {
        return super.equals(obj);
      }
      spire.common.Common.Certificate other = (spire.common.Common.Certificate) obj;

      boolean result = true;
      result = result && getDerBytes()
          .equals(other.getDerBytes());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DER_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + getDerBytes().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static spire.common.Common.Certificate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static spire.common.Common.Certificate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static spire.common.Common.Certificate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static spire.common.Common.Certificate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static spire.common.Common.Certificate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static spire.common.Common.Certificate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static spire.common.Common.Certificate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static spire.common.Common.Certificate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static spire.common.Common.Certificate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static spire.common.Common.Certificate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(spire.common.Common.Certificate prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** Certificate represents a ASN.1/DER encoded X509 certificate 
     * </pre>
     *
     * Protobuf type {@code spire.common.Certificate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spire.common.Certificate)
        spire.common.Common.CertificateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return spire.common.Common.internal_static_spire_common_Certificate_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return spire.common.Common.internal_static_spire_common_Certificate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                spire.common.Common.Certificate.class, spire.common.Common.Certificate.Builder.class);
      }

      // Construct using spire.common.Common.Certificate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        derBytes_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return spire.common.Common.internal_static_spire_common_Certificate_descriptor;
      }

      public spire.common.Common.Certificate getDefaultInstanceForType() {
        return spire.common.Common.Certificate.getDefaultInstance();
      }

      public spire.common.Common.Certificate build() {
        spire.common.Common.Certificate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public spire.common.Common.Certificate buildPartial() {
        spire.common.Common.Certificate result = new spire.common.Common.Certificate(this);
        result.derBytes_ = derBytes_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof spire.common.Common.Certificate) {
          return mergeFrom((spire.common.Common.Certificate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(spire.common.Common.Certificate other) {
        if (other == spire.common.Common.Certificate.getDefaultInstance()) return this;
        if (other.getDerBytes() != com.google.protobuf.ByteString.EMPTY) {
          setDerBytes(other.getDerBytes());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        spire.common.Common.Certificate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (spire.common.Common.Certificate) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString derBytes_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes der_bytes = 1;</code>
       */
      public com.google.protobuf.ByteString getDerBytes() {
        return derBytes_;
      }
      /**
       * <code>bytes der_bytes = 1;</code>
       */
      public Builder setDerBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        derBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes der_bytes = 1;</code>
       */
      public Builder clearDerBytes() {
        
        derBytes_ = getDefaultInstance().getDerBytes();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:spire.common.Certificate)
    }

    // @@protoc_insertion_point(class_scope:spire.common.Certificate)
    private static final spire.common.Common.Certificate DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new spire.common.Common.Certificate();
    }

    public static spire.common.Common.Certificate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Certificate>
        PARSER = new com.google.protobuf.AbstractParser<Certificate>() {
      public Certificate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Certificate(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Certificate> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Certificate> getParserForType() {
      return PARSER;
    }

    public spire.common.Common.Certificate getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PublicKeyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spire.common.PublicKey)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** PKIX encoded key data 
     * </pre>
     *
     * <code>bytes pkix_bytes = 1;</code>
     */
    com.google.protobuf.ByteString getPkixBytes();

    /**
     * <pre>
     ** key identifier 
     * </pre>
     *
     * <code>string kid = 2;</code>
     */
    String getKid();
    /**
     * <pre>
     ** key identifier 
     * </pre>
     *
     * <code>string kid = 2;</code>
     */
    com.google.protobuf.ByteString
        getKidBytes();

    /**
     * <pre>
     ** not after (seconds since unix epoch, 0 means "never expires") 
     * </pre>
     *
     * <code>int64 not_after = 3;</code>
     */
    long getNotAfter();
  }
  /**
   * <pre>
   ** PublicKey represents a PKIX encoded public key 
   * </pre>
   *
   * Protobuf type {@code spire.common.PublicKey}
   */
  public  static final class PublicKey extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spire.common.PublicKey)
      PublicKeyOrBuilder {
    // Use PublicKey.newBuilder() to construct.
    private PublicKey(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PublicKey() {
      pkixBytes_ = com.google.protobuf.ByteString.EMPTY;
      kid_ = "";
      notAfter_ = 0L;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PublicKey(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {

              pkixBytes_ = input.readBytes();
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              kid_ = s;
              break;
            }
            case 24: {

              notAfter_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return spire.common.Common.internal_static_spire_common_PublicKey_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return spire.common.Common.internal_static_spire_common_PublicKey_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              spire.common.Common.PublicKey.class, spire.common.Common.PublicKey.Builder.class);
    }

    public static final int PKIX_BYTES_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString pkixBytes_;
    /**
     * <pre>
     ** PKIX encoded key data 
     * </pre>
     *
     * <code>bytes pkix_bytes = 1;</code>
     */
    public com.google.protobuf.ByteString getPkixBytes() {
      return pkixBytes_;
    }

    public static final int KID_FIELD_NUMBER = 2;
    private volatile Object kid_;
    /**
     * <pre>
     ** key identifier 
     * </pre>
     *
     * <code>string kid = 2;</code>
     */
    public String getKid() {
      Object ref = kid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        kid_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** key identifier 
     * </pre>
     *
     * <code>string kid = 2;</code>
     */
    public com.google.protobuf.ByteString
        getKidBytes() {
      Object ref = kid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        kid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NOT_AFTER_FIELD_NUMBER = 3;
    private long notAfter_;
    /**
     * <pre>
     ** not after (seconds since unix epoch, 0 means "never expires") 
     * </pre>
     *
     * <code>int64 not_after = 3;</code>
     */
    public long getNotAfter() {
      return notAfter_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!pkixBytes_.isEmpty()) {
        output.writeBytes(1, pkixBytes_);
      }
      if (!getKidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, kid_);
      }
      if (notAfter_ != 0L) {
        output.writeInt64(3, notAfter_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!pkixBytes_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, pkixBytes_);
      }
      if (!getKidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, kid_);
      }
      if (notAfter_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, notAfter_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof spire.common.Common.PublicKey)) {
        return super.equals(obj);
      }
      spire.common.Common.PublicKey other = (spire.common.Common.PublicKey) obj;

      boolean result = true;
      result = result && getPkixBytes()
          .equals(other.getPkixBytes());
      result = result && getKid()
          .equals(other.getKid());
      result = result && (getNotAfter()
          == other.getNotAfter());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PKIX_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + getPkixBytes().hashCode();
      hash = (37 * hash) + KID_FIELD_NUMBER;
      hash = (53 * hash) + getKid().hashCode();
      hash = (37 * hash) + NOT_AFTER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getNotAfter());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static spire.common.Common.PublicKey parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static spire.common.Common.PublicKey parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static spire.common.Common.PublicKey parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static spire.common.Common.PublicKey parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static spire.common.Common.PublicKey parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static spire.common.Common.PublicKey parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static spire.common.Common.PublicKey parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static spire.common.Common.PublicKey parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static spire.common.Common.PublicKey parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static spire.common.Common.PublicKey parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(spire.common.Common.PublicKey prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     ** PublicKey represents a PKIX encoded public key 
     * </pre>
     *
     * Protobuf type {@code spire.common.PublicKey}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spire.common.PublicKey)
        spire.common.Common.PublicKeyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return spire.common.Common.internal_static_spire_common_PublicKey_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return spire.common.Common.internal_static_spire_common_PublicKey_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                spire.common.Common.PublicKey.class, spire.common.Common.PublicKey.Builder.class);
      }

      // Construct using spire.common.Common.PublicKey.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        pkixBytes_ = com.google.protobuf.ByteString.EMPTY;

        kid_ = "";

        notAfter_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return spire.common.Common.internal_static_spire_common_PublicKey_descriptor;
      }

      public spire.common.Common.PublicKey getDefaultInstanceForType() {
        return spire.common.Common.PublicKey.getDefaultInstance();
      }

      public spire.common.Common.PublicKey build() {
        spire.common.Common.PublicKey result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public spire.common.Common.PublicKey buildPartial() {
        spire.common.Common.PublicKey result = new spire.common.Common.PublicKey(this);
        result.pkixBytes_ = pkixBytes_;
        result.kid_ = kid_;
        result.notAfter_ = notAfter_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof spire.common.Common.PublicKey) {
          return mergeFrom((spire.common.Common.PublicKey)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(spire.common.Common.PublicKey other) {
        if (other == spire.common.Common.PublicKey.getDefaultInstance()) return this;
        if (other.getPkixBytes() != com.google.protobuf.ByteString.EMPTY) {
          setPkixBytes(other.getPkixBytes());
        }
        if (!other.getKid().isEmpty()) {
          kid_ = other.kid_;
          onChanged();
        }
        if (other.getNotAfter() != 0L) {
          setNotAfter(other.getNotAfter());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        spire.common.Common.PublicKey parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (spire.common.Common.PublicKey) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString pkixBytes_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       ** PKIX encoded key data 
       * </pre>
       *
       * <code>bytes pkix_bytes = 1;</code>
       */
      public com.google.protobuf.ByteString getPkixBytes() {
        return pkixBytes_;
      }
      /**
       * <pre>
       ** PKIX encoded key data 
       * </pre>
       *
       * <code>bytes pkix_bytes = 1;</code>
       */
      public Builder setPkixBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        pkixBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** PKIX encoded key data 
       * </pre>
       *
       * <code>bytes pkix_bytes = 1;</code>
       */
      public Builder clearPkixBytes() {
        
        pkixBytes_ = getDefaultInstance().getPkixBytes();
        onChanged();
        return this;
      }

      private Object kid_ = "";
      /**
       * <pre>
       ** key identifier 
       * </pre>
       *
       * <code>string kid = 2;</code>
       */
      public String getKid() {
        Object ref = kid_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          kid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** key identifier 
       * </pre>
       *
       * <code>string kid = 2;</code>
       */
      public com.google.protobuf.ByteString
          getKidBytes() {
        Object ref = kid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          kid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** key identifier 
       * </pre>
       *
       * <code>string kid = 2;</code>
       */
      public Builder setKid(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        kid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** key identifier 
       * </pre>
       *
       * <code>string kid = 2;</code>
       */
      public Builder clearKid() {
        
        kid_ = getDefaultInstance().getKid();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** key identifier 
       * </pre>
       *
       * <code>string kid = 2;</code>
       */
      public Builder setKidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        kid_ = value;
        onChanged();
        return this;
      }

      private long notAfter_ ;
      /**
       * <pre>
       ** not after (seconds since unix epoch, 0 means "never expires") 
       * </pre>
       *
       * <code>int64 not_after = 3;</code>
       */
      public long getNotAfter() {
        return notAfter_;
      }
      /**
       * <pre>
       ** not after (seconds since unix epoch, 0 means "never expires") 
       * </pre>
       *
       * <code>int64 not_after = 3;</code>
       */
      public Builder setNotAfter(long value) {
        
        notAfter_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** not after (seconds since unix epoch, 0 means "never expires") 
       * </pre>
       *
       * <code>int64 not_after = 3;</code>
       */
      public Builder clearNotAfter() {
        
        notAfter_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:spire.common.PublicKey)
    }

    // @@protoc_insertion_point(class_scope:spire.common.PublicKey)
    private static final spire.common.Common.PublicKey DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new spire.common.Common.PublicKey();
    }

    public static spire.common.Common.PublicKey getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PublicKey>
        PARSER = new com.google.protobuf.AbstractParser<PublicKey>() {
      public PublicKey parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PublicKey(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PublicKey> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<PublicKey> getParserForType() {
      return PARSER;
    }

    public spire.common.Common.PublicKey getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BundleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spire.common.Bundle)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     ** the SPIFFE ID of the trust domain the bundle belongs to 
     * </pre>
     *
     * <code>string trust_domain_id = 1;</code>
     */
    String getTrustDomainId();
    /**
     * <pre>
     ** the SPIFFE ID of the trust domain the bundle belongs to 
     * </pre>
     *
     * <code>string trust_domain_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getTrustDomainIdBytes();

    /**
     * <pre>
     ** list of root CA certificates 
     * </pre>
     *
     * <code>repeated .spire.common.Certificate root_cas = 2;</code>
     */
    java.util.List<spire.common.Common.Certificate> 
        getRootCasList();
    /**
     * <pre>
     ** list of root CA certificates 
     * </pre>
     *
     * <code>repeated .spire.common.Certificate root_cas = 2;</code>
     */
    spire.common.Common.Certificate getRootCas(int index);
    /**
     * <pre>
     ** list of root CA certificates 
     * </pre>
     *
     * <code>repeated .spire.common.Certificate root_cas = 2;</code>
     */
    int getRootCasCount();
    /**
     * <pre>
     ** list of root CA certificates 
     * </pre>
     *
     * <code>repeated .spire.common.Certificate root_cas = 2;</code>
     */
    java.util.List<? extends spire.common.Common.CertificateOrBuilder> 
        getRootCasOrBuilderList();
    /**
     * <pre>
     ** list of root CA certificates 
     * </pre>
     *
     * <code>repeated .spire.common.Certificate root_cas = 2;</code>
     */
    spire.common.Common.CertificateOrBuilder getRootCasOrBuilder(
            int index);

    /**
     * <pre>
     ** list of JWT signing keys 
     * </pre>
     *
     * <code>repeated .spire.common.PublicKey jwt_signing_keys = 3;</code>
     */
    java.util.List<spire.common.Common.PublicKey> 
        getJwtSigningKeysList();
    /**
     * <pre>
     ** list of JWT signing keys 
     * </pre>
     *
     * <code>repeated .spire.common.PublicKey jwt_signing_keys = 3;</code>
     */
    spire.common.Common.PublicKey getJwtSigningKeys(int index);
    /**
     * <pre>
     ** list of JWT signing keys 
     * </pre>
     *
     * <code>repeated .spire.common.PublicKey jwt_signing_keys = 3;</code>
     */
    int getJwtSigningKeysCount();
    /**
     * <pre>
     ** list of JWT signing keys 
     * </pre>
     *
     * <code>repeated .spire.common.PublicKey jwt_signing_keys = 3;</code>
     */
    java.util.List<? extends spire.common.Common.PublicKeyOrBuilder> 
        getJwtSigningKeysOrBuilderList();
    /**
     * <pre>
     ** list of JWT signing keys 
     * </pre>
     *
     * <code>repeated .spire.common.PublicKey jwt_signing_keys = 3;</code>
     */
    spire.common.Common.PublicKeyOrBuilder getJwtSigningKeysOrBuilder(
            int index);
  }
  /**
   * Protobuf type {@code spire.common.Bundle}
   */
  public  static final class Bundle extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spire.common.Bundle)
      BundleOrBuilder {
    // Use Bundle.newBuilder() to construct.
    private Bundle(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Bundle() {
      trustDomainId_ = "";
      rootCas_ = java.util.Collections.emptyList();
      jwtSigningKeys_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Bundle(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              trustDomainId_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                rootCas_ = new java.util.ArrayList<spire.common.Common.Certificate>();
                mutable_bitField0_ |= 0x00000002;
              }
              rootCas_.add(
                  input.readMessage(spire.common.Common.Certificate.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                jwtSigningKeys_ = new java.util.ArrayList<spire.common.Common.PublicKey>();
                mutable_bitField0_ |= 0x00000004;
              }
              jwtSigningKeys_.add(
                  input.readMessage(spire.common.Common.PublicKey.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          rootCas_ = java.util.Collections.unmodifiableList(rootCas_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          jwtSigningKeys_ = java.util.Collections.unmodifiableList(jwtSigningKeys_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return spire.common.Common.internal_static_spire_common_Bundle_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return spire.common.Common.internal_static_spire_common_Bundle_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              spire.common.Common.Bundle.class, spire.common.Common.Bundle.Builder.class);
    }

    private int bitField0_;
    public static final int TRUST_DOMAIN_ID_FIELD_NUMBER = 1;
    private volatile Object trustDomainId_;
    /**
     * <pre>
     ** the SPIFFE ID of the trust domain the bundle belongs to 
     * </pre>
     *
     * <code>string trust_domain_id = 1;</code>
     */
    public String getTrustDomainId() {
      Object ref = trustDomainId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        trustDomainId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     ** the SPIFFE ID of the trust domain the bundle belongs to 
     * </pre>
     *
     * <code>string trust_domain_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTrustDomainIdBytes() {
      Object ref = trustDomainId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        trustDomainId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ROOT_CAS_FIELD_NUMBER = 2;
    private java.util.List<spire.common.Common.Certificate> rootCas_;
    /**
     * <pre>
     ** list of root CA certificates 
     * </pre>
     *
     * <code>repeated .spire.common.Certificate root_cas = 2;</code>
     */
    public java.util.List<spire.common.Common.Certificate> getRootCasList() {
      return rootCas_;
    }
    /**
     * <pre>
     ** list of root CA certificates 
     * </pre>
     *
     * <code>repeated .spire.common.Certificate root_cas = 2;</code>
     */
    public java.util.List<? extends spire.common.Common.CertificateOrBuilder> 
        getRootCasOrBuilderList() {
      return rootCas_;
    }
    /**
     * <pre>
     ** list of root CA certificates 
     * </pre>
     *
     * <code>repeated .spire.common.Certificate root_cas = 2;</code>
     */
    public int getRootCasCount() {
      return rootCas_.size();
    }
    /**
     * <pre>
     ** list of root CA certificates 
     * </pre>
     *
     * <code>repeated .spire.common.Certificate root_cas = 2;</code>
     */
    public spire.common.Common.Certificate getRootCas(int index) {
      return rootCas_.get(index);
    }
    /**
     * <pre>
     ** list of root CA certificates 
     * </pre>
     *
     * <code>repeated .spire.common.Certificate root_cas = 2;</code>
     */
    public spire.common.Common.CertificateOrBuilder getRootCasOrBuilder(
        int index) {
      return rootCas_.get(index);
    }

    public static final int JWT_SIGNING_KEYS_FIELD_NUMBER = 3;
    private java.util.List<spire.common.Common.PublicKey> jwtSigningKeys_;
    /**
     * <pre>
     ** list of JWT signing keys 
     * </pre>
     *
     * <code>repeated .spire.common.PublicKey jwt_signing_keys = 3;</code>
     */
    public java.util.List<spire.common.Common.PublicKey> getJwtSigningKeysList() {
      return jwtSigningKeys_;
    }
    /**
     * <pre>
     ** list of JWT signing keys 
     * </pre>
     *
     * <code>repeated .spire.common.PublicKey jwt_signing_keys = 3;</code>
     */
    public java.util.List<? extends spire.common.Common.PublicKeyOrBuilder> 
        getJwtSigningKeysOrBuilderList() {
      return jwtSigningKeys_;
    }
    /**
     * <pre>
     ** list of JWT signing keys 
     * </pre>
     *
     * <code>repeated .spire.common.PublicKey jwt_signing_keys = 3;</code>
     */
    public int getJwtSigningKeysCount() {
      return jwtSigningKeys_.size();
    }
    /**
     * <pre>
     ** list of JWT signing keys 
     * </pre>
     *
     * <code>repeated .spire.common.PublicKey jwt_signing_keys = 3;</code>
     */
    public spire.common.Common.PublicKey getJwtSigningKeys(int index) {
      return jwtSigningKeys_.get(index);
    }
    /**
     * <pre>
     ** list of JWT signing keys 
     * </pre>
     *
     * <code>repeated .spire.common.PublicKey jwt_signing_keys = 3;</code>
     */
    public spire.common.Common.PublicKeyOrBuilder getJwtSigningKeysOrBuilder(
        int index) {
      return jwtSigningKeys_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTrustDomainIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, trustDomainId_);
      }
      for (int i = 0; i < rootCas_.size(); i++) {
        output.writeMessage(2, rootCas_.get(i));
      }
      for (int i = 0; i < jwtSigningKeys_.size(); i++) {
        output.writeMessage(3, jwtSigningKeys_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTrustDomainIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, trustDomainId_);
      }
      for (int i = 0; i < rootCas_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, rootCas_.get(i));
      }
      for (int i = 0; i < jwtSigningKeys_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, jwtSigningKeys_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof spire.common.Common.Bundle)) {
        return super.equals(obj);
      }
      spire.common.Common.Bundle other = (spire.common.Common.Bundle) obj;

      boolean result = true;
      result = result && getTrustDomainId()
          .equals(other.getTrustDomainId());
      result = result && getRootCasList()
          .equals(other.getRootCasList());
      result = result && getJwtSigningKeysList()
          .equals(other.getJwtSigningKeysList());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TRUST_DOMAIN_ID_FIELD_NUMBER;
      hash = (53 * hash) + getTrustDomainId().hashCode();
      if (getRootCasCount() > 0) {
        hash = (37 * hash) + ROOT_CAS_FIELD_NUMBER;
        hash = (53 * hash) + getRootCasList().hashCode();
      }
      if (getJwtSigningKeysCount() > 0) {
        hash = (37 * hash) + JWT_SIGNING_KEYS_FIELD_NUMBER;
        hash = (53 * hash) + getJwtSigningKeysList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static spire.common.Common.Bundle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static spire.common.Common.Bundle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static spire.common.Common.Bundle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static spire.common.Common.Bundle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static spire.common.Common.Bundle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static spire.common.Common.Bundle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static spire.common.Common.Bundle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static spire.common.Common.Bundle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static spire.common.Common.Bundle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static spire.common.Common.Bundle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(spire.common.Common.Bundle prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code spire.common.Bundle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spire.common.Bundle)
        spire.common.Common.BundleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return spire.common.Common.internal_static_spire_common_Bundle_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return spire.common.Common.internal_static_spire_common_Bundle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                spire.common.Common.Bundle.class, spire.common.Common.Bundle.Builder.class);
      }

      // Construct using spire.common.Common.Bundle.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRootCasFieldBuilder();
          getJwtSigningKeysFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        trustDomainId_ = "";

        if (rootCasBuilder_ == null) {
          rootCas_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          rootCasBuilder_.clear();
        }
        if (jwtSigningKeysBuilder_ == null) {
          jwtSigningKeys_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          jwtSigningKeysBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return spire.common.Common.internal_static_spire_common_Bundle_descriptor;
      }

      public spire.common.Common.Bundle getDefaultInstanceForType() {
        return spire.common.Common.Bundle.getDefaultInstance();
      }

      public spire.common.Common.Bundle build() {
        spire.common.Common.Bundle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public spire.common.Common.Bundle buildPartial() {
        spire.common.Common.Bundle result = new spire.common.Common.Bundle(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.trustDomainId_ = trustDomainId_;
        if (rootCasBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            rootCas_ = java.util.Collections.unmodifiableList(rootCas_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.rootCas_ = rootCas_;
        } else {
          result.rootCas_ = rootCasBuilder_.build();
        }
        if (jwtSigningKeysBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            jwtSigningKeys_ = java.util.Collections.unmodifiableList(jwtSigningKeys_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.jwtSigningKeys_ = jwtSigningKeys_;
        } else {
          result.jwtSigningKeys_ = jwtSigningKeysBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof spire.common.Common.Bundle) {
          return mergeFrom((spire.common.Common.Bundle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(spire.common.Common.Bundle other) {
        if (other == spire.common.Common.Bundle.getDefaultInstance()) return this;
        if (!other.getTrustDomainId().isEmpty()) {
          trustDomainId_ = other.trustDomainId_;
          onChanged();
        }
        if (rootCasBuilder_ == null) {
          if (!other.rootCas_.isEmpty()) {
            if (rootCas_.isEmpty()) {
              rootCas_ = other.rootCas_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureRootCasIsMutable();
              rootCas_.addAll(other.rootCas_);
            }
            onChanged();
          }
        } else {
          if (!other.rootCas_.isEmpty()) {
            if (rootCasBuilder_.isEmpty()) {
              rootCasBuilder_.dispose();
              rootCasBuilder_ = null;
              rootCas_ = other.rootCas_;
              bitField0_ = (bitField0_ & ~0x00000002);
              rootCasBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRootCasFieldBuilder() : null;
            } else {
              rootCasBuilder_.addAllMessages(other.rootCas_);
            }
          }
        }
        if (jwtSigningKeysBuilder_ == null) {
          if (!other.jwtSigningKeys_.isEmpty()) {
            if (jwtSigningKeys_.isEmpty()) {
              jwtSigningKeys_ = other.jwtSigningKeys_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureJwtSigningKeysIsMutable();
              jwtSigningKeys_.addAll(other.jwtSigningKeys_);
            }
            onChanged();
          }
        } else {
          if (!other.jwtSigningKeys_.isEmpty()) {
            if (jwtSigningKeysBuilder_.isEmpty()) {
              jwtSigningKeysBuilder_.dispose();
              jwtSigningKeysBuilder_ = null;
              jwtSigningKeys_ = other.jwtSigningKeys_;
              bitField0_ = (bitField0_ & ~0x00000004);
              jwtSigningKeysBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getJwtSigningKeysFieldBuilder() : null;
            } else {
              jwtSigningKeysBuilder_.addAllMessages(other.jwtSigningKeys_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        spire.common.Common.Bundle parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (spire.common.Common.Bundle) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object trustDomainId_ = "";
      /**
       * <pre>
       ** the SPIFFE ID of the trust domain the bundle belongs to 
       * </pre>
       *
       * <code>string trust_domain_id = 1;</code>
       */
      public String getTrustDomainId() {
        Object ref = trustDomainId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          trustDomainId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       ** the SPIFFE ID of the trust domain the bundle belongs to 
       * </pre>
       *
       * <code>string trust_domain_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTrustDomainIdBytes() {
        Object ref = trustDomainId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          trustDomainId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       ** the SPIFFE ID of the trust domain the bundle belongs to 
       * </pre>
       *
       * <code>string trust_domain_id = 1;</code>
       */
      public Builder setTrustDomainId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        trustDomainId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** the SPIFFE ID of the trust domain the bundle belongs to 
       * </pre>
       *
       * <code>string trust_domain_id = 1;</code>
       */
      public Builder clearTrustDomainId() {
        
        trustDomainId_ = getDefaultInstance().getTrustDomainId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       ** the SPIFFE ID of the trust domain the bundle belongs to 
       * </pre>
       *
       * <code>string trust_domain_id = 1;</code>
       */
      public Builder setTrustDomainIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        trustDomainId_ = value;
        onChanged();
        return this;
      }

      private java.util.List<spire.common.Common.Certificate> rootCas_ =
        java.util.Collections.emptyList();
      private void ensureRootCasIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          rootCas_ = new java.util.ArrayList<spire.common.Common.Certificate>(rootCas_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          spire.common.Common.Certificate, spire.common.Common.Certificate.Builder, spire.common.Common.CertificateOrBuilder> rootCasBuilder_;

      /**
       * <pre>
       ** list of root CA certificates 
       * </pre>
       *
       * <code>repeated .spire.common.Certificate root_cas = 2;</code>
       */
      public java.util.List<spire.common.Common.Certificate> getRootCasList() {
        if (rootCasBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rootCas_);
        } else {
          return rootCasBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       ** list of root CA certificates 
       * </pre>
       *
       * <code>repeated .spire.common.Certificate root_cas = 2;</code>
       */
      public int getRootCasCount() {
        if (rootCasBuilder_ == null) {
          return rootCas_.size();
        } else {
          return rootCasBuilder_.getCount();
        }
      }
      /**
       * <pre>
       ** list of root CA certificates 
       * </pre>
       *
       * <code>repeated .spire.common.Certificate root_cas = 2;</code>
       */
      public spire.common.Common.Certificate getRootCas(int index) {
        if (rootCasBuilder_ == null) {
          return rootCas_.get(index);
        } else {
          return rootCasBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       ** list of root CA certificates 
       * </pre>
       *
       * <code>repeated .spire.common.Certificate root_cas = 2;</code>
       */
      public Builder setRootCas(
          int index, spire.common.Common.Certificate value) {
        if (rootCasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRootCasIsMutable();
          rootCas_.set(index, value);
          onChanged();
        } else {
          rootCasBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** list of root CA certificates 
       * </pre>
       *
       * <code>repeated .spire.common.Certificate root_cas = 2;</code>
       */
      public Builder setRootCas(
          int index, spire.common.Common.Certificate.Builder builderForValue) {
        if (rootCasBuilder_ == null) {
          ensureRootCasIsMutable();
          rootCas_.set(index, builderForValue.build());
          onChanged();
        } else {
          rootCasBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** list of root CA certificates 
       * </pre>
       *
       * <code>repeated .spire.common.Certificate root_cas = 2;</code>
       */
      public Builder addRootCas(spire.common.Common.Certificate value) {
        if (rootCasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRootCasIsMutable();
          rootCas_.add(value);
          onChanged();
        } else {
          rootCasBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       ** list of root CA certificates 
       * </pre>
       *
       * <code>repeated .spire.common.Certificate root_cas = 2;</code>
       */
      public Builder addRootCas(
          int index, spire.common.Common.Certificate value) {
        if (rootCasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRootCasIsMutable();
          rootCas_.add(index, value);
          onChanged();
        } else {
          rootCasBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** list of root CA certificates 
       * </pre>
       *
       * <code>repeated .spire.common.Certificate root_cas = 2;</code>
       */
      public Builder addRootCas(
          spire.common.Common.Certificate.Builder builderForValue) {
        if (rootCasBuilder_ == null) {
          ensureRootCasIsMutable();
          rootCas_.add(builderForValue.build());
          onChanged();
        } else {
          rootCasBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** list of root CA certificates 
       * </pre>
       *
       * <code>repeated .spire.common.Certificate root_cas = 2;</code>
       */
      public Builder addRootCas(
          int index, spire.common.Common.Certificate.Builder builderForValue) {
        if (rootCasBuilder_ == null) {
          ensureRootCasIsMutable();
          rootCas_.add(index, builderForValue.build());
          onChanged();
        } else {
          rootCasBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** list of root CA certificates 
       * </pre>
       *
       * <code>repeated .spire.common.Certificate root_cas = 2;</code>
       */
      public Builder addAllRootCas(
          Iterable<? extends spire.common.Common.Certificate> values) {
        if (rootCasBuilder_ == null) {
          ensureRootCasIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rootCas_);
          onChanged();
        } else {
          rootCasBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       ** list of root CA certificates 
       * </pre>
       *
       * <code>repeated .spire.common.Certificate root_cas = 2;</code>
       */
      public Builder clearRootCas() {
        if (rootCasBuilder_ == null) {
          rootCas_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          rootCasBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       ** list of root CA certificates 
       * </pre>
       *
       * <code>repeated .spire.common.Certificate root_cas = 2;</code>
       */
      public Builder removeRootCas(int index) {
        if (rootCasBuilder_ == null) {
          ensureRootCasIsMutable();
          rootCas_.remove(index);
          onChanged();
        } else {
          rootCasBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       ** list of root CA certificates 
       * </pre>
       *
       * <code>repeated .spire.common.Certificate root_cas = 2;</code>
       */
      public spire.common.Common.Certificate.Builder getRootCasBuilder(
          int index) {
        return getRootCasFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       ** list of root CA certificates 
       * </pre>
       *
       * <code>repeated .spire.common.Certificate root_cas = 2;</code>
       */
      public spire.common.Common.CertificateOrBuilder getRootCasOrBuilder(
          int index) {
        if (rootCasBuilder_ == null) {
          return rootCas_.get(index);  } else {
          return rootCasBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       ** list of root CA certificates 
       * </pre>
       *
       * <code>repeated .spire.common.Certificate root_cas = 2;</code>
       */
      public java.util.List<? extends spire.common.Common.CertificateOrBuilder> 
           getRootCasOrBuilderList() {
        if (rootCasBuilder_ != null) {
          return rootCasBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rootCas_);
        }
      }
      /**
       * <pre>
       ** list of root CA certificates 
       * </pre>
       *
       * <code>repeated .spire.common.Certificate root_cas = 2;</code>
       */
      public spire.common.Common.Certificate.Builder addRootCasBuilder() {
        return getRootCasFieldBuilder().addBuilder(
            spire.common.Common.Certificate.getDefaultInstance());
      }
      /**
       * <pre>
       ** list of root CA certificates 
       * </pre>
       *
       * <code>repeated .spire.common.Certificate root_cas = 2;</code>
       */
      public spire.common.Common.Certificate.Builder addRootCasBuilder(
          int index) {
        return getRootCasFieldBuilder().addBuilder(
            index, spire.common.Common.Certificate.getDefaultInstance());
      }
      /**
       * <pre>
       ** list of root CA certificates 
       * </pre>
       *
       * <code>repeated .spire.common.Certificate root_cas = 2;</code>
       */
      public java.util.List<spire.common.Common.Certificate.Builder> 
           getRootCasBuilderList() {
        return getRootCasFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          spire.common.Common.Certificate, spire.common.Common.Certificate.Builder, spire.common.Common.CertificateOrBuilder> 
          getRootCasFieldBuilder() {
        if (rootCasBuilder_ == null) {
          rootCasBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              spire.common.Common.Certificate, spire.common.Common.Certificate.Builder, spire.common.Common.CertificateOrBuilder>(
                  rootCas_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          rootCas_ = null;
        }
        return rootCasBuilder_;
      }

      private java.util.List<spire.common.Common.PublicKey> jwtSigningKeys_ =
        java.util.Collections.emptyList();
      private void ensureJwtSigningKeysIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          jwtSigningKeys_ = new java.util.ArrayList<spire.common.Common.PublicKey>(jwtSigningKeys_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          spire.common.Common.PublicKey, spire.common.Common.PublicKey.Builder, spire.common.Common.PublicKeyOrBuilder> jwtSigningKeysBuilder_;

      /**
       * <pre>
       ** list of JWT signing keys 
       * </pre>
       *
       * <code>repeated .spire.common.PublicKey jwt_signing_keys = 3;</code>
       */
      public java.util.List<spire.common.Common.PublicKey> getJwtSigningKeysList() {
        if (jwtSigningKeysBuilder_ == null) {
          return java.util.Collections.unmodifiableList(jwtSigningKeys_);
        } else {
          return jwtSigningKeysBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       ** list of JWT signing keys 
       * </pre>
       *
       * <code>repeated .spire.common.PublicKey jwt_signing_keys = 3;</code>
       */
      public int getJwtSigningKeysCount() {
        if (jwtSigningKeysBuilder_ == null) {
          return jwtSigningKeys_.size();
        } else {
          return jwtSigningKeysBuilder_.getCount();
        }
      }
      /**
       * <pre>
       ** list of JWT signing keys 
       * </pre>
       *
       * <code>repeated .spire.common.PublicKey jwt_signing_keys = 3;</code>
       */
      public spire.common.Common.PublicKey getJwtSigningKeys(int index) {
        if (jwtSigningKeysBuilder_ == null) {
          return jwtSigningKeys_.get(index);
        } else {
          return jwtSigningKeysBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       ** list of JWT signing keys 
       * </pre>
       *
       * <code>repeated .spire.common.PublicKey jwt_signing_keys = 3;</code>
       */
      public Builder setJwtSigningKeys(
          int index, spire.common.Common.PublicKey value) {
        if (jwtSigningKeysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJwtSigningKeysIsMutable();
          jwtSigningKeys_.set(index, value);
          onChanged();
        } else {
          jwtSigningKeysBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** list of JWT signing keys 
       * </pre>
       *
       * <code>repeated .spire.common.PublicKey jwt_signing_keys = 3;</code>
       */
      public Builder setJwtSigningKeys(
          int index, spire.common.Common.PublicKey.Builder builderForValue) {
        if (jwtSigningKeysBuilder_ == null) {
          ensureJwtSigningKeysIsMutable();
          jwtSigningKeys_.set(index, builderForValue.build());
          onChanged();
        } else {
          jwtSigningKeysBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** list of JWT signing keys 
       * </pre>
       *
       * <code>repeated .spire.common.PublicKey jwt_signing_keys = 3;</code>
       */
      public Builder addJwtSigningKeys(spire.common.Common.PublicKey value) {
        if (jwtSigningKeysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJwtSigningKeysIsMutable();
          jwtSigningKeys_.add(value);
          onChanged();
        } else {
          jwtSigningKeysBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       ** list of JWT signing keys 
       * </pre>
       *
       * <code>repeated .spire.common.PublicKey jwt_signing_keys = 3;</code>
       */
      public Builder addJwtSigningKeys(
          int index, spire.common.Common.PublicKey value) {
        if (jwtSigningKeysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJwtSigningKeysIsMutable();
          jwtSigningKeys_.add(index, value);
          onChanged();
        } else {
          jwtSigningKeysBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       ** list of JWT signing keys 
       * </pre>
       *
       * <code>repeated .spire.common.PublicKey jwt_signing_keys = 3;</code>
       */
      public Builder addJwtSigningKeys(
          spire.common.Common.PublicKey.Builder builderForValue) {
        if (jwtSigningKeysBuilder_ == null) {
          ensureJwtSigningKeysIsMutable();
          jwtSigningKeys_.add(builderForValue.build());
          onChanged();
        } else {
          jwtSigningKeysBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** list of JWT signing keys 
       * </pre>
       *
       * <code>repeated .spire.common.PublicKey jwt_signing_keys = 3;</code>
       */
      public Builder addJwtSigningKeys(
          int index, spire.common.Common.PublicKey.Builder builderForValue) {
        if (jwtSigningKeysBuilder_ == null) {
          ensureJwtSigningKeysIsMutable();
          jwtSigningKeys_.add(index, builderForValue.build());
          onChanged();
        } else {
          jwtSigningKeysBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       ** list of JWT signing keys 
       * </pre>
       *
       * <code>repeated .spire.common.PublicKey jwt_signing_keys = 3;</code>
       */
      public Builder addAllJwtSigningKeys(
          Iterable<? extends spire.common.Common.PublicKey> values) {
        if (jwtSigningKeysBuilder_ == null) {
          ensureJwtSigningKeysIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, jwtSigningKeys_);
          onChanged();
        } else {
          jwtSigningKeysBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       ** list of JWT signing keys 
       * </pre>
       *
       * <code>repeated .spire.common.PublicKey jwt_signing_keys = 3;</code>
       */
      public Builder clearJwtSigningKeys() {
        if (jwtSigningKeysBuilder_ == null) {
          jwtSigningKeys_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          jwtSigningKeysBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       ** list of JWT signing keys 
       * </pre>
       *
       * <code>repeated .spire.common.PublicKey jwt_signing_keys = 3;</code>
       */
      public Builder removeJwtSigningKeys(int index) {
        if (jwtSigningKeysBuilder_ == null) {
          ensureJwtSigningKeysIsMutable();
          jwtSigningKeys_.remove(index);
          onChanged();
        } else {
          jwtSigningKeysBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       ** list of JWT signing keys 
       * </pre>
       *
       * <code>repeated .spire.common.PublicKey jwt_signing_keys = 3;</code>
       */
      public spire.common.Common.PublicKey.Builder getJwtSigningKeysBuilder(
          int index) {
        return getJwtSigningKeysFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       ** list of JWT signing keys 
       * </pre>
       *
       * <code>repeated .spire.common.PublicKey jwt_signing_keys = 3;</code>
       */
      public spire.common.Common.PublicKeyOrBuilder getJwtSigningKeysOrBuilder(
          int index) {
        if (jwtSigningKeysBuilder_ == null) {
          return jwtSigningKeys_.get(index);  } else {
          return jwtSigningKeysBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       ** list of JWT signing keys 
       * </pre>
       *
       * <code>repeated .spire.common.PublicKey jwt_signing_keys = 3;</code>
       */
      public java.util.List<? extends spire.common.Common.PublicKeyOrBuilder> 
           getJwtSigningKeysOrBuilderList() {
        if (jwtSigningKeysBuilder_ != null) {
          return jwtSigningKeysBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(jwtSigningKeys_);
        }
      }
      /**
       * <pre>
       ** list of JWT signing keys 
       * </pre>
       *
       * <code>repeated .spire.common.PublicKey jwt_signing_keys = 3;</code>
       */
      public spire.common.Common.PublicKey.Builder addJwtSigningKeysBuilder() {
        return getJwtSigningKeysFieldBuilder().addBuilder(
            spire.common.Common.PublicKey.getDefaultInstance());
      }
      /**
       * <pre>
       ** list of JWT signing keys 
       * </pre>
       *
       * <code>repeated .spire.common.PublicKey jwt_signing_keys = 3;</code>
       */
      public spire.common.Common.PublicKey.Builder addJwtSigningKeysBuilder(
          int index) {
        return getJwtSigningKeysFieldBuilder().addBuilder(
            index, spire.common.Common.PublicKey.getDefaultInstance());
      }
      /**
       * <pre>
       ** list of JWT signing keys 
       * </pre>
       *
       * <code>repeated .spire.common.PublicKey jwt_signing_keys = 3;</code>
       */
      public java.util.List<spire.common.Common.PublicKey.Builder> 
           getJwtSigningKeysBuilderList() {
        return getJwtSigningKeysFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          spire.common.Common.PublicKey, spire.common.Common.PublicKey.Builder, spire.common.Common.PublicKeyOrBuilder> 
          getJwtSigningKeysFieldBuilder() {
        if (jwtSigningKeysBuilder_ == null) {
          jwtSigningKeysBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              spire.common.Common.PublicKey, spire.common.Common.PublicKey.Builder, spire.common.Common.PublicKeyOrBuilder>(
                  jwtSigningKeys_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          jwtSigningKeys_ = null;
        }
        return jwtSigningKeysBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:spire.common.Bundle)
    }

    // @@protoc_insertion_point(class_scope:spire.common.Bundle)
    private static final spire.common.Common.Bundle DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new spire.common.Common.Bundle();
    }

    public static spire.common.Common.Bundle getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Bundle>
        PARSER = new com.google.protobuf.AbstractParser<Bundle>() {
      public Bundle parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Bundle(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Bundle> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Bundle> getParserForType() {
      return PARSER;
    }

    public spire.common.Common.Bundle getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_spire_common_Empty_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_spire_common_Empty_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_spire_common_AttestationData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_spire_common_AttestationData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_spire_common_Selector_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_spire_common_Selector_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_spire_common_Selectors_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_spire_common_Selectors_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_spire_common_AttestedNode_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_spire_common_AttestedNode_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_spire_common_RegistrationEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_spire_common_RegistrationEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_spire_common_RegistrationEntries_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_spire_common_RegistrationEntries_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_spire_common_Certificate_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_spire_common_Certificate_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_spire_common_PublicKey_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_spire_common_PublicKey_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_spire_common_Bundle_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_spire_common_Bundle_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\031proto/common/common.proto\022\014spire.commo" +
      "n\"\007\n\005Empty\"-\n\017AttestationData\022\014\n\004type\030\001 " +
      "\001(\t\022\014\n\004data\030\002 \001(\014\"\'\n\010Selector\022\014\n\004type\030\001 " +
      "\001(\t\022\r\n\005value\030\002 \001(\t\"4\n\tSelectors\022\'\n\007entri" +
      "es\030\001 \003(\0132\026.spire.common.Selector\"t\n\014Atte" +
      "stedNode\022\021\n\tspiffe_id\030\001 \001(\t\022\035\n\025attestati" +
      "on_data_type\030\002 \001(\t\022\032\n\022cert_serial_number" +
      "\030\003 \001(\t\022\026\n\016cert_not_after\030\004 \001(\003\"\276\001\n\021Regis" +
      "trationEntry\022)\n\tselectors\030\001 \003(\0132\026.spire." +
      "common.Selector\022\021\n\tparent_id\030\002 \001(\t\022\021\n\tsp",
      "iffe_id\030\003 \001(\t\022\013\n\003ttl\030\004 \001(\005\022\026\n\016federates_" +
      "with\030\005 \003(\t\022\020\n\010entry_id\030\006 \001(\t\022\r\n\005admin\030\007 " +
      "\001(\010\022\022\n\ndownstream\030\010 \001(\010\"G\n\023RegistrationE" +
      "ntries\0220\n\007entries\030\001 \003(\0132\037.spire.common.R" +
      "egistrationEntry\" \n\013Certificate\022\021\n\tder_b" +
      "ytes\030\001 \001(\014\"?\n\tPublicKey\022\022\n\npkix_bytes\030\001 " +
      "\001(\014\022\013\n\003kid\030\002 \001(\t\022\021\n\tnot_after\030\003 \001(\003\"\201\001\n\006" +
      "Bundle\022\027\n\017trust_domain_id\030\001 \001(\t\022+\n\010root_" +
      "cas\030\002 \003(\0132\031.spire.common.Certificate\0221\n\020" +
      "jwt_signing_keys\030\003 \003(\0132\027.spire.common.Pu",
      "blicKeyB\010Z\006commonb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_spire_common_Empty_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_spire_common_Empty_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_spire_common_Empty_descriptor,
        new String[] { });
    internal_static_spire_common_AttestationData_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_spire_common_AttestationData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_spire_common_AttestationData_descriptor,
        new String[] { "Type", "Data", });
    internal_static_spire_common_Selector_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_spire_common_Selector_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_spire_common_Selector_descriptor,
        new String[] { "Type", "Value", });
    internal_static_spire_common_Selectors_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_spire_common_Selectors_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_spire_common_Selectors_descriptor,
        new String[] { "Entries", });
    internal_static_spire_common_AttestedNode_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_spire_common_AttestedNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_spire_common_AttestedNode_descriptor,
        new String[] { "SpiffeId", "AttestationDataType", "CertSerialNumber", "CertNotAfter", });
    internal_static_spire_common_RegistrationEntry_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_spire_common_RegistrationEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_spire_common_RegistrationEntry_descriptor,
        new String[] { "Selectors", "ParentId", "SpiffeId", "Ttl", "FederatesWith", "EntryId", "Admin", "Downstream", });
    internal_static_spire_common_RegistrationEntries_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_spire_common_RegistrationEntries_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_spire_common_RegistrationEntries_descriptor,
        new String[] { "Entries", });
    internal_static_spire_common_Certificate_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_spire_common_Certificate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_spire_common_Certificate_descriptor,
        new String[] { "DerBytes", });
    internal_static_spire_common_PublicKey_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_spire_common_PublicKey_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_spire_common_PublicKey_descriptor,
        new String[] { "PkixBytes", "Kid", "NotAfter", });
    internal_static_spire_common_Bundle_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_spire_common_Bundle_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_spire_common_Bundle_descriptor,
        new String[] { "TrustDomainId", "RootCas", "JwtSigningKeys", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
